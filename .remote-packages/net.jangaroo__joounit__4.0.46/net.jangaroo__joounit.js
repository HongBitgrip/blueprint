Ext.define("flexunit.framework.TestListener",function(TestListener){return{}});Ext.define("flexunit.framework.AssertionFailedError",function(AssertionFailedError){function AssertionFailedError$(message){if(arguments.length<=0)message="";this.super$_tYA(message)}return{extend:"AS3.Error",constructor:AssertionFailedError$,super$_tYA:function(){AS3.Error.prototype.constructor.apply(this,arguments)},requires:["AS3.Error"]}});Ext.define("flexunit.framework.TestSuiteTestListener",function(TestSuiteTestListener){function TestSuiteTestListener$(suite,result){this.suite$dBSB=suite;this.result$dBSB=result;result.addListener(AS3.cast(flexunit.framework.TestListener,this));this.timer$dBSB=new flash.utils.Timer(5,1);this.timer$dBSB.addEventListener("timer",AS3.bind(this,"handleTimer"));if(listenerStack$static==null)listenerStack$static=new Array;else result.removeListener(AS3.cast(flexunit.framework.TestListener,listenerStack$static[0]));
listenerStack$static.unshift(this)}function endTest(test){if(listenerStack$static[0]!=this)return;this.timer$dBSB.removeEventListener(flash.events.TimerEvent.TIMER,AS3.bind(this,"handleTimer"));this.timer$dBSB=new flash.utils.Timer(5,1);this.timer$dBSB.addEventListener(flash.events.TimerEvent.TIMER,AS3.bind(this,"handleTimer"));this.timer$dBSB.start()}function handleTimer(event){this.suite$dBSB.runNext(this.result$dBSB)}function pop(){var popped=listenerStack$static.shift();this.result$dBSB.removeListener(AS3.cast(flexunit.framework.TestListener,
this));if(listenerStack$static.length>0){this.result$dBSB.addListener(AS3.cast(flexunit.framework.TestListener,listenerStack$static[0]));listenerStack$static[0].endTest(null)}}function addError(test,error){}function addFailure(test,error){}function startTest(test){}var listenerStack$static=null;return{mixins:["flexunit.framework.TestListener"],constructor:TestSuiteTestListener$,endTest:endTest,handleTimer:handleTimer,pop:pop,addError:addError,addFailure:addFailure,startTest:startTest,suite$dBSB:null,
result$dBSB:null,timer$dBSB:null,requires:["flash.events.TimerEvent","flash.utils.Timer","flexunit.framework.TestListener"]}});Ext.define("flexunit.framework.Reflective",function(Reflective){return{}});Ext.define("flexunit.framework.TestCase",function(TestCase){function TestCase$(methodName){if(arguments.length<=0)methodName=null;this.super$oHM3();this.methodName=methodName;this.asyncMethods$oHM3=new Array}function run(){var result=new flexunit.framework.TestResult;this.runWithResult(result);return result}function runWithResult(result){result.run(this)}function runStart(){this.setUp()}function runMiddle(){this.runTestOrAsync$oHM3()}function runFinish(){this.asyncTestHelper$oHM3=null;this.tearDown()}
function setUp(){}function tearDown(){}function countTestCases(){return 1}function toString(){return this.methodName+" ("+this.className+")"}function get$className(){return flash.utils.getQualifiedClassName(this).replace(/::/,".")}function get$assertionsMade(){return this._assertionsMade$oHM3}function runTestOrAsync(){if(this.methodName==null||this.methodName=="")flexunit.framework.Assert.fail("No test method to run");if(this.asyncTestHelper$oHM3!=null)this.asyncTestHelper$oHM3.runNext();else this[this.methodName]()}
function addAsync(func,timeout,passThroughData,failFunc){switch(Math.max(arguments.length,2)){case 2:passThroughData=null;case 3:failFunc=null}flexunit.framework.Assert.oneAssertionHasBeenMade();if(this.asyncTestHelper$oHM3==null)this.asyncTestHelper$oHM3=new flexunit.framework.AsyncTestHelper(this,this.testResult$oHM3);this.asyncMethods$oHM3.push({func:func,timeout:timeout,extraData:passThroughData,failFunc:failFunc});return AS3.bind(this.asyncTestHelper$oHM3,"handleEvent")}function hasAsync(){return this.asyncMethods$oHM3.length>
0}function startAsync(){this.asyncTestHelper$oHM3.startAsync()}function getNextAsync(){return this.asyncMethods$oHM3.shift()}function setTestResult(result){this.testResult$oHM3=result}function set$assertionsMade(value){this._assertionsMade$oHM3=value}function getTestMethodNames(){if(this.methodNames$oHM3==null){this.methodNames$oHM3=new Array;var type=flash.utils.describeType(this);var names=type.method["@name"];for(var i=0;i<names.length();i++)if(this.isTestMethod$oHM3(String(names[i])))this.methodNames$oHM3.push(String(names[i]))}return this.methodNames$oHM3}
function isTestMethod(name){return name.indexOf("test",0)==0}return{extend:"flexunit.framework.Assert",mixins:["flexunit.framework.Test"],constructor:TestCase$,super$oHM3:function(){flexunit.framework.Assert.prototype.constructor.apply(this,arguments)},run:run,runWithResult:runWithResult,runStart:runStart,runMiddle:runMiddle,runFinish:runFinish,setUp:setUp,tearDown:tearDown,countTestCases:countTestCases,toString:toString,runTestOrAsync$oHM3:runTestOrAsync,addAsync:addAsync,hasAsync:hasAsync,startAsync:startAsync,
getNextAsync:getNextAsync,setTestResult:setTestResult,getTestMethodNames:getTestMethodNames,isTestMethod$oHM3:isTestMethod,methodNames$oHM3:null,methodName:null,asyncMethods$oHM3:null,asyncTestHelper$oHM3:null,testResult$oHM3:null,_assertionsMade$oHM3:0,__accessors__:{className:{get:get$className},assertionsMade:{get:get$assertionsMade,set:set$assertionsMade}},requires:["flash.utils.describeType","flash.utils.getQualifiedClassName","flexunit.framework.Assert","flexunit.framework.Test"],uses:["flexunit.framework.AsyncTestHelper",
"flexunit.framework.TestResult"]}});Ext.define("flexunit.framework.TestFailure",function(TestFailure){function TestFailure$(test,error){this.test$YH9N=test;this.error$YH9N=error}function failedTest(){return this.test$YH9N}function thrownException(){return this.error$YH9N}function exceptionMessage(){if(!this.isFailure())return this.error$YH9N.toString();else return this.error$YH9N.toString()}function isFailure(){return AS3.is(this.thrownException(),flexunit.framework.AssertionFailedError)}function toString(){var errorMessage=Object(this.test$YH9N).toString()+
": "+this.error$YH9N.toString();if(!this.isFailure())errorMessage+=": "+this.error$YH9N.toString();return errorMessage}return{constructor:TestFailure$,failedTest:failedTest,thrownException:thrownException,exceptionMessage:exceptionMessage,isFailure:isFailure,toString:toString,test$YH9N:null,error$YH9N:null,uses:["flexunit.framework.AssertionFailedError"]}});Ext.define("flexunit.framework.Test",function(Test){return{mixins:["flexunit.framework.Reflective"],requires:["flexunit.framework.Reflective"]}});Ext.define("flexunit.framework.Assert",function(Assert){var _maxAssertionsMade$static=0;var _totalAssertionsMade$static=0;function resetAssertionsMade$static(){if(Assert._assertionsMade>_maxAssertionsMade$static)_maxAssertionsMade$static=Assert._assertionsMade;Assert._assertionsMade=0}function oneAssertionHasBeenMade$static(){Assert._assertionsMade++;_totalAssertionsMade$static++}function resetEveryAsserionsFields$static(){Assert._assertionsMade=0;_maxAssertionsMade$static=0;_totalAssertionsMade$static=
0}function get$maxAssertionsMade$static(){return _maxAssertionsMade$static}function get$assetionsMade$static(){return Assert._assertionsMade}function get$totalAssertionsMade$static(){return _totalAssertionsMade$static}function Assert$(){}function assertEquals$static(){var rest=Array.prototype.slice.call(arguments);if(rest.length==3)failNotEquals$static(rest[0],rest[1],rest[2]);else failNotEquals$static("",rest[0],rest[1])}function assertObjectEquals$static(){var rest=Array.prototype.slice.call(arguments);
if(rest.length==3)failObjectEquals$static(rest[0],rest[1],rest[2]);else failObjectEquals$static("",rest[0],rest[1])}function assertMatch$static(){var rest=Array.prototype.slice.call(arguments);if(rest.length==3)failNoMatch$static(rest[0],rest[1],rest[2]);else failNoMatch$static("",rest[0],rest[1])}function assertNoMatch$static(){var rest=Array.prototype.slice.call(arguments);if(rest.length==3)failMatch$static(rest[0],rest[1],rest[2]);else failMatch$static("",rest[0],rest[1])}function assertContained$static(){var rest=
Array.prototype.slice.call(arguments);if(rest.length==3)failNotContained$static(rest[0],rest[1],rest[2]);else failNotContained$static("",rest[0],rest[1])}function assertNotContained$static(){var rest=Array.prototype.slice.call(arguments);if(rest.length==3)failContained$static(rest[0],rest[1],rest[2]);else failContained$static("",rest[0],rest[1])}function assertStrictlyEquals$static(){var rest=Array.prototype.slice.call(arguments);if(rest.length==3)failNotStrictlyEquals$static(rest[0],rest[1],rest[2]);
else failNotStrictlyEquals$static("",rest[0],rest[1])}function assertTrue$static(){var rest=Array.prototype.slice.call(arguments);if(rest.length==2)failNotTrue$static(rest[0],rest[1]);else failNotTrue$static("",rest[0])}function assertFalse$static(){var rest=Array.prototype.slice.call(arguments);if(rest.length==2)failTrue$static(rest[0],rest[1]);else failTrue$static("",rest[0])}function assertNull$static(){var rest=Array.prototype.slice.call(arguments);if(rest.length==2)failNotNull$static(rest[0],
rest[1]);else failNotNull$static("",rest[0])}function assertNotNull$static(){var rest=Array.prototype.slice.call(arguments);if(rest.length==2)failNull$static(rest[0],rest[1]);else failNull$static("",rest[0])}function assertUndefined$static(){var rest=Array.prototype.slice.call(arguments);if(rest.length==2)failNotUndefined$static(rest[0],rest[1]);else failNotUndefined$static("",rest[0])}function assertNotUndefined$static(){var rest=Array.prototype.slice.call(arguments);if(rest.length==2)failUndefined$static(rest[0],
rest[1]);else failUndefined$static("",rest[0])}function fail$static(failMessage){if(arguments.length<=0)failMessage="";throw new flexunit.framework.AssertionFailedError(failMessage);}function failNotEquals$static(message,expected,actual){Assert.oneAssertionHasBeenMade();if(expected!=actual){if(AS3.is(expected,Number)&&AS3.is(actual,Number)&&isNaN(Number(expected))&&isNaN(Number(actual)))return;failWithUserMessage$static(message,mx.utils.StringUtil.substitute(flexunit.framework.AssertStringFormats.EXPECTED_BUT_WAS,
expected,actual))}}function failObjectEquals$static(message,expected,actual){Assert.oneAssertionHasBeenMade();if(mx.utils.ObjectUtil.compare(expected,actual)!=0)failWithUserMessage$static(message,flexunit.framework.AssertStringFormats.ACTUAL_OBJECT_DIFFERS)}function failNoMatch$static(message,regexp,string){Assert.oneAssertionHasBeenMade();if(!regexp.test(string))failWithUserMessage$static(message,mx.utils.StringUtil.substitute(flexunit.framework.AssertStringFormats.NO_MATCH,string,regexp.toString()))}
function failMatch$static(message,regexp,string){Assert.oneAssertionHasBeenMade();if(regexp.test(string))failWithUserMessage$static(message,mx.utils.StringUtil.substitute(flexunit.framework.AssertStringFormats.MATCH,string,regexp.toString()))}function failNotContained$static(message,shortString,longString){Assert.oneAssertionHasBeenMade();if(longString.indexOf(shortString)<0)failWithUserMessage$static(message,mx.utils.StringUtil.substitute(flexunit.framework.AssertStringFormats.NOT_CONTAINED,shortString,
longString))}function failContained$static(message,shortString,longString){Assert.oneAssertionHasBeenMade();if(longString.indexOf(shortString)>=0)failWithUserMessage$static(message,mx.utils.StringUtil.substitute(flexunit.framework.AssertStringFormats.CONTAINED,shortString,longString))}function failNotStrictlyEquals$static(message,expected,actual){Assert.oneAssertionHasBeenMade();if(expected!==actual)failWithUserMessage$static(message,mx.utils.StringUtil.substitute(flexunit.framework.AssertStringFormats.EXPECTED_BUT_WAS,
expected,actual))}function failNotTrue$static(message,condition){Assert.oneAssertionHasBeenMade();if(!condition)failWithUserMessage$static(message,mx.utils.StringUtil.substitute(flexunit.framework.AssertStringFormats.EXPECTED_BUT_WAS,true,false))}function failTrue$static(message,condition){Assert.oneAssertionHasBeenMade();if(condition)failWithUserMessage$static(message,mx.utils.StringUtil.substitute(flexunit.framework.AssertStringFormats.EXPECTED_BUT_WAS,false,true))}function failNull$static(message,
object){Assert.oneAssertionHasBeenMade();if(object==null)failWithUserMessage$static(message,mx.utils.StringUtil.substitute(flexunit.framework.AssertStringFormats.NULL,object))}function failNotNull$static(message,object){Assert.oneAssertionHasBeenMade();if(object!=null)failWithUserMessage$static(message,mx.utils.StringUtil.substitute(flexunit.framework.AssertStringFormats.NOT_NULL,object))}function failUndefined$static(message,object){Assert.oneAssertionHasBeenMade();if(object==null)failWithUserMessage$static(message,
mx.utils.StringUtil.substitute(flexunit.framework.AssertStringFormats.UNDEFINED,object))}function failNotUndefined$static(message,object){Assert.oneAssertionHasBeenMade();if(object!=null)failWithUserMessage$static(message,mx.utils.StringUtil.substitute(flexunit.framework.AssertStringFormats.NOT_UNDEFINED,object))}function failWithUserMessage$static(userMessage,failMessage){if(userMessage.length>0)userMessage=userMessage+" - ";throw new flexunit.framework.AssertionFailedError(userMessage+failMessage);
}return{constructor:Assert$,statics:{_assertionsMade:0,resetAssertionsMade:resetAssertionsMade$static,oneAssertionHasBeenMade:oneAssertionHasBeenMade$static,resetEveryAsserionsFields:resetEveryAsserionsFields$static,assertEquals:assertEquals$static,assertObjectEquals:assertObjectEquals$static,assertMatch:assertMatch$static,assertNoMatch:assertNoMatch$static,assertContained:assertContained$static,assertNotContained:assertNotContained$static,assertStrictlyEquals:assertStrictlyEquals$static,assertTrue:assertTrue$static,
assertFalse:assertFalse$static,assertNull:assertNull$static,assertNotNull:assertNotNull$static,assertUndefined:assertUndefined$static,assertNotUndefined:assertNotUndefined$static,fail:fail$static},__accessors__:{statics:{maxAssertionsMade:{get:get$maxAssertionsMade$static},assetionsMade:{get:get$assetionsMade$static},totalAssertionsMade:{get:get$totalAssertionsMade$static}}},requires:["mx.utils.ObjectUtil","mx.utils.StringUtil"],uses:["flexunit.framework.AssertStringFormats","flexunit.framework.AssertionFailedError"]}});Ext.define("flexunit.framework.AsyncTestHelper",function(AsyncTestHelper){function AsyncTestHelper$(testCase,testResult){this.testCase$7tox=testCase;this.testResult$7tox=testResult;this.timer$7tox=new flash.utils.Timer(100);this.timer$7tox.addEventListener(flash.events.TimerEvent.TIMER,AS3.bind(this,"timerHandler"))}function startAsync(){this.loadAsync();if(this.objToPass$7tox!=null)this.testResult$7tox.continueRun(this.testCase$7tox);else this.timer$7tox.start()}function loadAsync(){var async=this.testCase$7tox.getNextAsync();
this.func$7tox=async.func;this.extraData$7tox=async.extraData;this.failFunc$7tox=async.failFunc;this.timer$7tox=new flash.utils.Timer(async.timeout,1);this.timer$7tox.addEventListener(flash.events.TimerEvent.TIMER,AS3.bind(this,"timerHandler"));this.timer$7tox.delay=async.timeout}function runNext(){if(this.shouldFail$7tox)if(this.failFunc$7tox!=null)this.failFunc$7tox(this.extraData$7tox);else flexunit.framework.Assert.fail(mx.utils.StringUtil.substitute(flexunit.framework.AssertStringFormats.ASYNC_CALL_NOT_FIRED,
this.timer$7tox.delay));else{if(this.extraData$7tox!=null)this.func$7tox(this.objToPass$7tox,this.extraData$7tox);else this.func$7tox(this.objToPass$7tox);this.func$7tox=null;this.objToPass$7tox=null;this.extraData$7tox=null}}function timerHandler(event){this.timer$7tox.stop();this.shouldFail$7tox=true;this.testResult$7tox.continueRun(this.testCase$7tox)}function handleEvent(event){var wasReallyAsync=this.timer$7tox.running;this.timer$7tox.stop();if(this.shouldFail$7tox)return;this.objToPass$7tox=
event;if(wasReallyAsync)this.testResult$7tox.continueRun(this.testCase$7tox)}return{constructor:AsyncTestHelper$,startAsync:startAsync,loadAsync:loadAsync,runNext:runNext,timerHandler:timerHandler,handleEvent:handleEvent,testCase$7tox:null,func$7tox:null,extraData$7tox:null,failFunc$7tox:null,testResult$7tox:null,shouldFail$7tox:false,objToPass$7tox:null,timer$7tox:null,requires:["flash.events.TimerEvent","flash.utils.Timer","mx.utils.StringUtil"],uses:["flexunit.framework.Assert","flexunit.framework.AssertStringFormats"]}});Ext.define("flexunit.framework.EventfulTestCase",function(EventfulTestCase){function eventListener_(){this.eventListener$7T96=new flexunit.framework.EventfulTestCaseListener}function get$lastDispatchedExpectedEvent(){return this.eventListener$7T96.lastDispatchedExpectedEvent}function get$dispatchedExpectedEvents(){return this.eventListener$7T96.dispatchedExpectedEvents}function EventfulTestCase$(methodName){if(arguments.length<=0)methodName=null;this.super$7T96(methodName);eventListener_.call(this)}
function listenForEvent(source,type,expected){if(arguments.length<=2)expected=EventfulTestCase.EVENT_EXPECTED;if(source.hasEventListener(type))source.removeEventListener(type,AS3.bind(this.eventListener$7T96,"handleEvent"));this.eventListener$7T96.listenForEvent(type,expected);source.addEventListener(type,AS3.bind(this.eventListener$7T96,"handleEvent"),false,0,true)}function assertEvents(message){if(arguments.length<=0)message="";flexunit.framework.Assert.oneAssertionHasBeenMade();var failed=this.failExpectedEventsDidNotOccur$7T96(message,
this.eventListener$7T96);if(!failed)this.failUnexpectedEventsOccur$7T96(message,this.eventListener$7T96)}function failExpectedEventsDidNotOccur(message,listener){if(listener.expectedEventsDispatched()==false){failWithUserMessage$static(message,mx.utils.StringUtil.substitute(flexunit.framework.AssertStringFormats.EVENT_DID_NOT_OCCUR,listener.expectedEventTypes,listener.dispatchedExpectedEventTypes));return true}return false}function failUnexpectedEventsOccur(message,listener){if(listener.unexpectedEventsNotDispatched()==
false){failWithUserMessage$static(message,mx.utils.StringUtil.substitute(flexunit.framework.AssertStringFormats.EVENT_DID_OCCUR,listener.unexpectedEventTypes,listener.dispatchedExpectedEventTypes));return true}return false}function failWithUserMessage$static(userMessage,failMessage){if(userMessage.length>0)userMessage+=" - ";throw new flexunit.framework.AssertionFailedError(userMessage+failMessage);}return{extend:"flexunit.framework.TestCase",constructor:EventfulTestCase$,super$7T96:function(){flexunit.framework.TestCase.prototype.constructor.apply(this,
arguments)},listenForEvent:listenForEvent,assertEvents:assertEvents,failExpectedEventsDidNotOccur$7T96:failExpectedEventsDidNotOccur,failUnexpectedEventsOccur$7T96:failUnexpectedEventsOccur,statics:{EVENT_EXPECTED:true,EVENT_UNEXPECTED:false},__accessors__:{lastDispatchedExpectedEvent:{get:get$lastDispatchedExpectedEvent},dispatchedExpectedEvents:{get:get$dispatchedExpectedEvents}},requires:["flexunit.framework.TestCase","mx.utils.StringUtil"],uses:["flexunit.framework.Assert","flexunit.framework.AssertStringFormats",
"flexunit.framework.AssertionFailedError","flexunit.framework.EventfulTestCaseListener"]}});Ext.define("flexunit.framework.TestResult",function(TestResult){function TestResult$(){this.failures$gncm=AS3.cast(flexunit.utils.Collection,new flexunit.utils.ArrayList);this.errors$gncm=AS3.cast(flexunit.utils.Collection,new flexunit.utils.ArrayList);this.listeners$gncm=AS3.cast(flexunit.utils.Collection,new flexunit.utils.ArrayList);this.runTests$gncm=0}function run(testCase){this.doRun$gncm(testCase)}function continueRun(testCase){this.doContinue$gncm(testCase)}function doRun(testCase){this.startTest(testCase);
testCase.setTestResult(this);var protectedTestCase=AS3.cast(flexunit.framework.Protectable,new flexunit.framework.ProtectedStartTestCase(testCase));var startOK=this.doProtected$gncm(testCase,protectedTestCase);if(startOK)this.doContinue$gncm(testCase);else this.endTest(testCase);testCase.assertionsMade=this.assertionsMade}function doContinue(testCase){var protectedTestCase=AS3.cast(flexunit.framework.Protectable,new flexunit.framework.ProtectedMiddleTestCase(testCase));this.doProtected$gncm(testCase,
protectedTestCase);if(testCase.hasAsync())testCase.startAsync();else this.doFinish$gncm(testCase)}function doFinish(testCase){var protectedTestCase=AS3.cast(flexunit.framework.Protectable,new flexunit.framework.ProtectedFinishTestCase(testCase));this.doProtected$gncm(testCase,protectedTestCase);this.endTest(testCase)}function addError(test,error){this.errors$gncm.addItem(new flexunit.framework.TestFailure(test,error));var iter=this.listeners$gncm.iterator();while(iter.hasNext()){var listener=AS3.cast(flexunit.framework.TestListener,
iter.next());listener.addError(test,error)}}function addFailure(test,error){this.failures$gncm.addItem(new flexunit.framework.TestFailure(test,error));var iter=this.listeners$gncm.iterator();while(iter.hasNext()){var listener=AS3.cast(flexunit.framework.TestListener,iter.next());listener.addFailure(test,error)}}function errorCount(){return this.errors$gncm.length()}function errorsIterator(){return this.errors$gncm.iterator()}function failureCount(){return this.failures$gncm.length()}function failuresIterator(){return this.failures$gncm.iterator()}
function shouldStop(){return this.stopTests$gncm}function stop(stopTests){this.stopTests$gncm=stopTests}function wasSuccessful(){return this.failureCount()==0&&this.errorCount()==0}function addListener(listener){if(this.listeners$gncm.contains(listener)==false)this.listeners$gncm.addItem(listener)}function removeListener(listener){if(this.listeners$gncm.contains(listener))this.listeners$gncm.removeItem(listener)}function runCount(){return this.runTests$gncm}function doProtected(testCase,protectable){var success=
false;try{if(AS3.is(protectable,flexunit.framework.ProtectedMiddleTestCase))flexunit.framework.Assert.resetAssertionsMade();protectable.protect();success=true}catch(error){if(AS3.is(error,AS3.Error))if(AS3.is(error,flexunit.framework.AssertionFailedError))this.addFailure(testCase,AS3.cast(flexunit.framework.AssertionFailedError,error));else this.addError(testCase,error);else throw error;}if(AS3.is(protectable,flexunit.framework.ProtectedMiddleTestCase))this._localAssertionsMade$gncm=flexunit.framework.Assert.assetionsMade;
return success}function startTest(test){var count=test.countTestCases();this.runTests$gncm=this.runTests$gncm+count;var iter=this.listeners$gncm.iterator();var listener;while(iter.hasNext()){listener=AS3.cast(flexunit.framework.TestListener,iter.next());listener.startTest(test)}}function endTest(test){var iter=this.listeners$gncm.iterator();var listener;while(iter.hasNext()){listener=AS3.cast(flexunit.framework.TestListener,iter.next());listener.endTest(test)}}function get$assertionsMade(){return this._localAssertionsMade$gncm}
return{syncToFrame:false,constructor:TestResult$,run:run,continueRun:continueRun,doRun$gncm:doRun,doContinue$gncm:doContinue,doFinish$gncm:doFinish,addError:addError,addFailure:addFailure,errorCount:errorCount,errorsIterator:errorsIterator,failureCount:failureCount,failuresIterator:failuresIterator,shouldStop:shouldStop,stop:stop,wasSuccessful:wasSuccessful,addListener:addListener,removeListener:removeListener,runCount:runCount,doProtected$gncm:doProtected,startTest:startTest,endTest:endTest,stopTests$gncm:false,
failures$gncm:null,errors$gncm:null,listeners$gncm:null,runTests$gncm:NaN,_localAssertionsMade$gncm:NaN,__accessors__:{assertionsMade:{get:get$assertionsMade}},requires:["AS3.Error"],uses:["flexunit.framework.Assert","flexunit.framework.AssertionFailedError","flexunit.framework.Protectable","flexunit.framework.ProtectedFinishTestCase","flexunit.framework.ProtectedMiddleTestCase","flexunit.framework.ProtectedStartTestCase","flexunit.framework.TestFailure","flexunit.framework.TestListener","flexunit.utils.ArrayList",
"flexunit.utils.Collection"]}});Ext.define("flexunit.framework.EventfulTestCaseListener",function(EventfulTestCaseListener){function _expectedEventTypes_(){this._expectedEventTypes$_LKQ=new mx.collections.ArrayCollection}function _unexpectedEventTypes_(){this._unexpectedEventTypes$_LKQ=new mx.collections.ArrayCollection}function _dispatchedExpectedEvents_(){this._dispatchedExpectedEvents$_LKQ=new mx.collections.ArrayCollection}function get$expectedEventTypes(){var eventTypes="";for(var i=0;i<this._expectedEventTypes$_LKQ.length;i++){eventTypes+=
AS3.as(this._expectedEventTypes$_LKQ[i],String);if(i<this._expectedEventTypes$_LKQ.length-1)eventTypes+=","}return eventTypes}function get$unexpectedEventTypes(){var eventTypes="";for(var i=0;i<this._unexpectedEventTypes$_LKQ.length;i++){eventTypes+=AS3.as(this._unexpectedEventTypes$_LKQ[i],String);if(i<this._unexpectedEventTypes$_LKQ.length-1)eventTypes+=","}return eventTypes}function get$dispatchedExpectedEventTypes(){var eventTypes="";for(var i;i<this._dispatchedExpectedEvents$_LKQ.length;i++){var event=
AS3.as(this._dispatchedExpectedEvents$_LKQ[i],flash.events.Event);eventTypes+=event.type;if(i<this._dispatchedExpectedEvents$_LKQ.length-1)eventTypes+=","}return eventTypes}function get$dispatchedExpectedEvents(){return this._dispatchedExpectedEvents$_LKQ.toArray()}function get$lastDispatchedExpectedEvent(){if(this._dispatchedExpectedEvents$_LKQ.length==0)return null;return AS3.cast(flash.events.Event,this._dispatchedExpectedEvents$_LKQ.getItemAt(this._dispatchedExpectedEvents$_LKQ.length-1))}function EventfulTestCaseListener$(){_expectedEventTypes_.call(this);
_unexpectedEventTypes_.call(this);_dispatchedExpectedEvents_.call(this);this._dispatchedExpectedEvents$_LKQ=new mx.collections.ArrayCollection;this._expectedEventTypes$_LKQ=new mx.collections.ArrayCollection}function listenForEvent(type,expected){if(expected)this._expectedEventTypes$_LKQ.addItem(type);else this._unexpectedEventTypes$_LKQ.addItem(type)}function expectedEventsDispatched(){for(var i=0;i<this._expectedEventTypes$_LKQ.length;++i){var expectedEvent=this._expectedEventTypes$_LKQ[i];if(this.expectedEventDispatched(expectedEvent)==
false)return false}return true}function expectedEventDispatched(expectedEvent){for(var i=0;i<this._dispatchedExpectedEvents$_LKQ.length;++i){var actualEvent=this._dispatchedExpectedEvents$_LKQ[i];if(actualEvent.type==expectedEvent)return true}return false}function unexpectedEventsNotDispatched(){for(var i=0;i<this._unexpectedEventTypes$_LKQ.length;++i){var unexpectedEvent=this._unexpectedEventTypes$_LKQ[i];if(this.unexpectedEventNotDispatched(unexpectedEvent)==false)return false}return true}function unexpectedEventNotDispatched(unexpectedEvent){for(var i=
0;i<this._dispatchedExpectedEvents$_LKQ.length;++i){var actualEvent=this._dispatchedExpectedEvents$_LKQ[i];if(actualEvent.type==unexpectedEvent)return false}return true}function handleEvent(event){this._dispatchedExpectedEvents$_LKQ.addItem(event)}return{constructor:EventfulTestCaseListener$,listenForEvent:listenForEvent,expectedEventsDispatched:expectedEventsDispatched,expectedEventDispatched:expectedEventDispatched,unexpectedEventsNotDispatched:unexpectedEventsNotDispatched,unexpectedEventNotDispatched:unexpectedEventNotDispatched,
handleEvent:handleEvent,__accessors__:{expectedEventTypes:{get:get$expectedEventTypes},unexpectedEventTypes:{get:get$unexpectedEventTypes},dispatchedExpectedEventTypes:{get:get$dispatchedExpectedEventTypes},dispatchedExpectedEvents:{get:get$dispatchedExpectedEvents},lastDispatchedExpectedEvent:{get:get$lastDispatchedExpectedEvent}},requires:["flash.events.Event","mx.collections.ArrayCollection"]}});Ext.define("flexunit.framework.ProtectedStartTestCase",function(ProtectedStartTestCase){function ProtectedStartTestCase$(testCase){this.testCase$vhqt=testCase}function protect(){this.testCase$vhqt.runStart()}return{mixins:["flexunit.framework.Protectable"],constructor:ProtectedStartTestCase$,protect:protect,testCase$vhqt:null,requires:["flexunit.framework.Protectable"]}});Ext.define("flexunit.framework.ProtectedFinishTestCase",function(ProtectedFinishTestCase){function ProtectedFinishTestCase$(testCase){this.testCase$UqSY=testCase}function protect(){this.testCase$UqSY.runFinish()}return{mixins:["flexunit.framework.Protectable"],constructor:ProtectedFinishTestCase$,protect:protect,testCase$UqSY:null,requires:["flexunit.framework.Protectable"]}});Ext.define("flexunit.framework.TestSuite",function(TestSuite){function TestSuite$(param){if(arguments.length<=0)param=null;this.testArrayList=AS3.cast(flexunit.utils.Collection,new flexunit.utils.ArrayList);if(param==null)return;if(AS3.is(param,Class)){var c=AS3.cast(Class,param);var newClass=new c;this.addTestMethods$H0S5(c,newClass);if(this.testArrayList.length()==0){var warningTestCase=new flexunit.framework.WarningTestCase("No tests found in "+newClass.className);this.addTestToList$H0S5(warningTestCase)}}else if(AS3.is(param,
flexunit.framework.Test))this.addTestToList$H0S5(AS3.cast(flexunit.framework.Test,param));else throw new AS3.Error("Can't handle constructor arg");}function toString(){return"TestSuite"}function runWithResult(result){this.runIter$H0S5=this.testArrayList.iterator();this.listener$H0S5=new flexunit.framework.TestSuiteTestListener(this,result);this.runNext(result)}function runNext(result){if(this.runIter$H0S5.hasNext()){if(result.shouldStop()){this.listener$H0S5.pop();return}var test=AS3.cast(flexunit.framework.Test,
this.runIter$H0S5.next());this.runTest$H0S5(test,result)}else this.listener$H0S5.pop()}function runTest(test,result){test.runWithResult(result)}function addTest(test){if(!AS3.is(test,flexunit.framework.Test))this.addTest(AS3.cast(flexunit.framework.Test,new flexunit.framework.WarningTestCase("Object instance passed to addTest does not implement Test interface")));else this.addTestToList$H0S5(test)}function addTestSuite(testClass){this.addTestToList$H0S5(new TestSuite(testClass))}function addTestMethods(theClass,
newClass){var methodNames=newClass.getTestMethodNames();for(var i=0;i<methodNames.length;i++){var method=String(methodNames[i]);this.addTestMethod$H0S5(theClass,method)}}function addTestMethod(theClass,methodName){this.addTestToList$H0S5(this.createTestInstance$H0S5(theClass,methodName))}function createTestInstance(theClass,methodName){var test=new theClass;if(AS3.is(test,flexunit.framework.TestCase))AS3.cast(flexunit.framework.TestCase,test).methodName=methodName;return test}function getTestMethodNames(){return null}
function getTests(){return this.testArrayList.toArray()}function countTestCases(){var count=0;var iter=this.testArrayList.iterator();while(iter.hasNext()){var test=AS3.cast(flexunit.framework.Test,iter.next());count=count+test.countTestCases()}return count}function testCount(){return this.testArrayList.length()}function get$className(){return flash.utils.getQualifiedClassName(this).replace(/::/,".")}function addTestToList(test){this.testArrayList.addItem(test)}return{mixins:["flexunit.framework.Test"],
constructor:TestSuite$,toString:toString,runWithResult:runWithResult,runNext:runNext,runTest$H0S5:runTest,addTest:addTest,addTestSuite:addTestSuite,addTestMethods$H0S5:addTestMethods,addTestMethod$H0S5:addTestMethod,createTestInstance$H0S5:createTestInstance,getTestMethodNames:getTestMethodNames,getTests:getTests,countTestCases:countTestCases,testCount:testCount,addTestToList$H0S5:addTestToList,testArrayList:null,name:null,runIter$H0S5:null,listener$H0S5:null,__accessors__:{className:{get:get$className}},
requires:["AS3.Error","flash.utils.getQualifiedClassName","flexunit.framework.Test"],uses:["flexunit.framework.TestCase","flexunit.framework.TestSuiteTestListener","flexunit.framework.WarningTestCase","flexunit.utils.ArrayList","flexunit.utils.Collection"]}});Ext.define("flexunit.framework.AssertStringFormats",function(AssertStringFormats){function AssertStringFormats$(){}return{constructor:AssertStringFormats$,statics:{ASYNC_CALL_NOT_FIRED:"Asynchronous function did not fire after {0} ms",CONTAINED:"\x3c{0}\x3e found in \x3c{1}\x3e",EVENT_DID_NOT_OCCUR:"Expected events \x3c{0}\x3e but caught events \x3c{1}\x3e",EVENT_DID_OCCUR:"Did not expect events \x3c{0}\x3e but caught events \x3c{1}\x3e",EXPECTED_BUT_WAS:"expected:\x3c{0}\x3e but was:\x3c{1}\x3e",
MATCH:"\x3c{0}\x3e matched \x3c{1}\x3e",NO_MATCH:"\x3c{0}\x3e did not match \x3c{1}\x3e",NOT_CONTAINED:"did not find \x3c{0}\x3e in \x3c{1}\x3e",NOT_NULL:"object was not null: {0}",NOT_UNDEFINED:"object was not undefined: {0}",NULL:"object was null: {0}",UNDEFINED:"object was undefined: {0}",ACTUAL_OBJECT_DIFFERS:"At least one property of the actual object differs from the expected object"}}});Ext.define("flexunit.framework.WarningTestCase",function(WarningTestCase){function WarningTestCase$(message){this.super$Xj3T("Warning: "+message);this.message$Xj3T=message}function runTest(){flexunit.framework.Assert.fail(this.message$Xj3T)}function toString(){return this.methodName}return{extend:"flexunit.framework.TestCase",constructor:WarningTestCase$,super$Xj3T:function(){flexunit.framework.TestCase.prototype.constructor.apply(this,arguments)},runTest$Xj3T:runTest,toString:toString,message$Xj3T:null,
requires:["flexunit.framework.TestCase"],uses:["flexunit.framework.Assert"]}});Ext.define("flexunit.framework.ProtectedMiddleTestCase",function(ProtectedMiddleTestCase){function ProtectedMiddleTestCase$(testCase){this.testCase$L78a=testCase}function protect(){this.testCase$L78a.runMiddle()}return{mixins:["flexunit.framework.Protectable"],constructor:ProtectedMiddleTestCase$,protect:protect,testCase$L78a:null,requires:["flexunit.framework.Protectable"]}});Ext.define("flexunit.framework.Protectable",function(Protectable){return{}});Ext.define("flexunit.utils.ArrayList",function(ArrayList){function ArrayList$(){this.items$5rQ9=new Array}function addItem(item){if(item==null)return false;this.items$5rQ9.push(item);return true}function clear(){this.items$5rQ9=new Array}function contains(item){return this.getItemIndex$5rQ9(item)>-1}function getItemAt(index){return this.items$5rQ9[index]}function iterator(){return AS3.cast(flexunit.utils.Iterator,new flexunit.utils.CollectionIterator(this))}function length(){return this.items$5rQ9.length}
function isEmpty(){return this.items$5rQ9.length==0}function removeItem(item){var itemIndex=this.getItemIndex$5rQ9(item);if(itemIndex<0)return false;this.items$5rQ9.splice(itemIndex,1);return true}function toArray(){return this.items$5rQ9}function getItemIndex(item){for(var i=0;i<this.items$5rQ9.length;i++)if(this.items$5rQ9[i]==item)return i;return-1}return{mixins:["flexunit.utils.Collection"],constructor:ArrayList$,addItem:addItem,clear:clear,contains:contains,getItemAt:getItemAt,iterator:iterator,
length:length,isEmpty:isEmpty,removeItem:removeItem,toArray:toArray,getItemIndex$5rQ9:getItemIndex,items$5rQ9:null,requires:["flexunit.utils.Collection"],uses:["flexunit.utils.CollectionIterator","flexunit.utils.Iterator"]}});Ext.define("flexunit.utils.Collection",function(Collection){return{}});Ext.define("flexunit.utils.CollectionIterator",function(CollectionIterator){function CollectionIterator$(collection){this.collection$irbw=collection;this.cursor$irbw=0}function hasNext(){return this.cursor$irbw<this.collection$irbw.length()}function next(){if(this.cursor$irbw>=this.collection$irbw.length())throw new AS3.Error("Past end of collection");return this.collection$irbw.getItemAt(this.cursor$irbw++)}return{mixins:["flexunit.utils.Iterator"],constructor:CollectionIterator$,hasNext:hasNext,
next:next,collection$irbw:null,cursor$irbw:NaN,requires:["AS3.Error","flexunit.utils.Iterator"]}});Ext.define("flexunit.utils.Iterator",function(Iterator){return{}});Ext.define("flexunit.textui.XmlResultPrinter",function(XmlResultPrinter){function mTests_(){this.mTests$1G9Y=new Array}function XmlResultPrinter$(suitName){mTests_.call(this);if(arguments.length<=0)suitName=null;this.resultXml$1G9Y=new Array;this.successfullTests$1G9Y=new Array;this.mTests$1G9Y=new Array;this.mSuite$1G9Y=suitName}function addError(test,error){if(!this.mCurrentTest$1G9Y.mError)this.mCurrentTest$1G9Y.mError=error}function addFailure(test,error){if(!this.mCurrentTest$1G9Y.mFailure)this.mCurrentTest$1G9Y.mFailure=
error}function endTest(test){if(this.mCurrentTest$1G9Y!=null){var endTime=new Date;this.mCurrentTest$1G9Y.mTime=endTime-this.mCurrentTest$1G9Y.mTime;this.mTests$1G9Y.push(this.mCurrentTest$1G9Y);this.mCurrentTest$1G9Y=null}this.successfullTests$1G9Y.push(test)}function startTest(test){if(this.mSuite$1G9Y==null)this.mSuite$1G9Y=test.className;this.mCurrentTest$1G9Y=new Object;this.mCurrentTest$1G9Y.mName=test.className+" "+AS3.as(test,flexunit.framework.TestCase).methodName;this.mCurrentTest$1G9Y.mTime=
new Date}function print(result,runTime){this.resultXml$1G9Y.push('\x3c?xml version\x3d"1.0" encoding\x3d"ISO-8859-1" ?\x3e\n');this.resultXml$1G9Y.push('\x3ctestsuite errors\x3d"');this.resultXml$1G9Y.push(result.errorCount());this.resultXml$1G9Y.push('" failures\x3d"');this.resultXml$1G9Y.push(result.failureCount());this.resultXml$1G9Y.push('" name\x3d"');this.resultXml$1G9Y.push(this.mSuite$1G9Y);this.resultXml$1G9Y.push('" tests\x3d"');this.resultXml$1G9Y.push(result.runCount());this.resultXml$1G9Y.push('" time\x3d"');
this.resultXml$1G9Y.push(runTime/1E3);this.resultXml$1G9Y.push('"\x3e\n');for(var i=0;i<this.mTests$1G9Y.length;++i){var test=this.mTests$1G9Y[i];this.resultXml$1G9Y.push('    \x3ctestcase name\x3d"');this.resultXml$1G9Y.push(test.mName);this.resultXml$1G9Y.push('" time\x3d"');this.resultXml$1G9Y.push(test.mTime/1E3);this.resultXml$1G9Y.push('"');if(test.mError||test.mFailure){this.resultXml$1G9Y.push("\x3e\n");this.resultXml$1G9Y.push("        \x3c");var defect;var tag;if(test.mError){defect=test.mError;
tag="error"}else{defect=test.mFailure;tag="failure"}this.resultXml$1G9Y.push(tag);this.resultXml$1G9Y.push(' message\x3d"');this.resultXml$1G9Y.push(this.escapeXml$1G9Y(defect.toString()));this.resultXml$1G9Y.push('" type\x3d""');this.resultXml$1G9Y.push("/");this.resultXml$1G9Y.push("\x3e\n");this.resultXml$1G9Y.push("    \x3c/testcase")}else this.resultXml$1G9Y.push("/");this.resultXml$1G9Y.push("\x3e\n")}this.resultXml$1G9Y.push("\x3c/testsuite\x3e")}function escapeXml(str){var escAmpRegEx=/&/g;
var escLtRegEx=/</g;var escGtRegEx=/>/g;var quotRegEx=/"/g;var aposRegEx=/'/g;var result=str.replace(escAmpRegEx,"\x26amp;").replace(escLtRegEx,"\x26lt;").replace(escGtRegEx,"\x26gt;").replace(quotRegEx,"\x26quot;").replace(aposRegEx,"\x26apos;");return result}function getXml(){return this.resultXml$1G9Y.join("")}return{mixins:["flexunit.framework.TestListener","flexunit.textui.Printer"],resultXml$1G9Y:null,mCurrentTest$1G9Y:null,mSuite$1G9Y:null,successfullTests$1G9Y:null,constructor:XmlResultPrinter$,
addError:addError,addFailure:addFailure,endTest:endTest,startTest:startTest,print:print,escapeXml$1G9Y:escapeXml,getXml:getXml,requires:["flexunit.framework.TestListener","flexunit.textui.Printer"],uses:["flexunit.framework.TestCase"]}});Ext.define("flexunit.textui.Printer",function(Printer){return{}});Ext.define("flexunit.textui.ResultPrinter",function(ResultPrinter){function ResultPrinter$(){this._progress$BZR1=""}function print(result,runTime){if(this._progress$BZR1.length>0)AS3.trace(this._progress$BZR1);this.printHeader(runTime);this.printErrors(result);this.printFailures(result);this.printFooter$BZR1(result)}function printHeader(runTime){AS3.trace("Time: "+runTime/1E3+" seconds")}function printErrors(result){this.printDefects(result.errorsIterator(),result.errorCount(),"error")}function printFailures(result){this.printDefects(result.failuresIterator(),
result.failureCount(),"failure")}function printDefects(defects,count,type){if(count==0)return;if(count==1)AS3.trace("There was "+count+" "+type+":");else AS3.trace("There were "+count+" "+type+"s:");for(var i=1;defects.hasNext();i++)this.printDefect$BZR1(AS3.cast(flexunit.framework.TestFailure,defects.next()),i)}function printDefect(defect,count){this.printDefectHeader$BZR1(defect,count);this.printDefectTrace$BZR1(defect)}function printDefectHeader(defect,count){AS3.trace(count+") "+defect.failedTest().toString())}
function printDefectTrace(defect){AS3.trace("\t"+defect.exceptionMessage())}function printFooter(result){if(result.wasSuccessful()){AS3.trace("");AS3.trace("OK ("+result.runCount()+" test"+(result.runCount()==1?"":"s")+")")}else{AS3.trace("");AS3.trace("FAILURES!!!");AS3.trace("Tests run: "+result.runCount()+",  Failures: "+result.failureCount()+",  Errors: "+result.errorCount())}AS3.trace("")}function addError(test,error){this.updateProgress$BZR1("E")}function addFailure(test,error){this.updateProgress$BZR1("F")}
function endTest(test){}function startTest(test){this.updateProgress$BZR1(".")}function updateProgress(lr){this._progress$BZR1=this._progress$BZR1+lr;if(this._progress$BZR1.length>40){AS3.trace(this._progress$BZR1);this._progress$BZR1=""}}return{mixins:["flexunit.framework.TestListener","flexunit.textui.Printer"],constructor:ResultPrinter$,print:print,printHeader:printHeader,printErrors:printErrors,printFailures:printFailures,printDefects:printDefects,printDefect$BZR1:printDefect,printDefectHeader$BZR1:printDefectHeader,
printDefectTrace$BZR1:printDefectTrace,printFooter$BZR1:printFooter,addError:addError,addFailure:addFailure,endTest:endTest,startTest:startTest,updateProgress$BZR1:updateProgress,_progress$BZR1:null,requires:["AS3.trace","flexunit.framework.TestListener","flexunit.textui.Printer"],uses:["flexunit.framework.TestFailure"]}});Ext.define("flexunit.textui.TestRunner",function(TestRunner){function TestRunner$(onComplete,printer){this.super$KbzU();switch(arguments.length){case 0:onComplete=null;case 1:printer=null}if(printer==null)this.printer$KbzU=new flexunit.textui.ResultPrinter;else this.printer$KbzU=printer;this.testsComplete$KbzU=onComplete}function run$static(test,onComplete,printer){switch(Math.max(arguments.length,1)){case 1:onComplete=null;case 2:printer=null}return(new TestRunner(onComplete,printer)).doRun(test)}
function doRun(test){this.result$KbzU=new flexunit.framework.TestResult;this.result$KbzU.addListener(AS3.cast(flexunit.framework.TestListener,this.printer$KbzU));this.result$KbzU.addListener(AS3.cast(flexunit.framework.TestListener,this));this.startTime$KbzU=flash.utils.getTimer();this.totalTestCount$KbzU=test.countTestCases();this.numTestsRun$KbzU=0;test.runWithResult(this.result$KbzU);return this.result$KbzU}function testEnded(test){if(++this.numTestsRun$KbzU==this.totalTestCount$KbzU){var endTime=
flash.utils.getTimer();var runTime=endTime-this.startTime$KbzU;this.printer$KbzU.print(this.result$KbzU,runTime);if(this.testsComplete$KbzU!=null)this.testsComplete$KbzU()}}return{extend:"flexunit.runner.BaseTestRunner",constructor:TestRunner$,super$KbzU:function(){flexunit.runner.BaseTestRunner.prototype.constructor.apply(this,arguments)},doRun:doRun,testEnded:testEnded,printer$KbzU:null,startTime$KbzU:0,totalTestCount$KbzU:0,numTestsRun$KbzU:0,result$KbzU:null,testsComplete$KbzU:null,statics:{run:run$static},
requires:["flash.utils.getTimer","flexunit.runner.BaseTestRunner"],uses:["flexunit.framework.TestListener","flexunit.framework.TestResult","flexunit.textui.ResultPrinter"]}});Ext.define("flexunit.runner.BaseTestRunner",function(BaseTestRunner){function startTest(test){this.testStarted(test)}function endTest(test){this.testEnded(test)}function addError(test,error){this.testError(test,error)}function addFailure(test,error){this.testFailure(test,error)}function testStarted(test){}function testEnded(test){}function testError(test,error){}function testFailure(test,error){}function BaseTestRunner$(){}return{mixins:["flexunit.framework.TestListener"],startTest:startTest,endTest:endTest,
addError:addError,addFailure:addFailure,testStarted:testStarted,testEnded:testEnded,testError:testError,testFailure:testFailure,constructor:BaseTestRunner$,requires:["flexunit.framework.TestListener"]}});Ext.define("net.jangaroo.joounit.runner.BrowserRunner",function(BrowserRunner){function outputTestResult_(){this.outputTestResult$MK$s=function(result){window["result"]=result;if(window["callPhantom"])window["callPhantom"](result)}}function onComplete_(){this.onComplete$MK$s=function(testResult,resultXml){BrowserRunner.insertIntoDOM(resultXml)}}function BrowserRunner$(config){this.super$MK$s();outputTestResult_.call(this);onComplete_.call(this);this.testSuite$MK$s=config["testSuite"];if(config.onComplete)this.onComplete$MK$s=
config.onComplete;if(config.outputTestResult)this.outputTestResult$MK$s=config.outputTestResult}function main$static(config){if(typeof config==="function")config={testSuite:config};(new BrowserRunner(config)).run()}function suiteNotFound$static(msg){window.classLoadingError=msg;AS3.trace("[ERROR]",window.classLoadingError);BrowserRunner.exit(false)}function onSuiteLoaded(){try{if(typeof this.testSuite$MK$s=="function"&&typeof this.testSuite$MK$s["suite"]=="function"){AS3.trace("[INFO]","running test suite "+
flash.utils.getQualifiedClassName(this.testSuite$MK$s));this.startTime$MK$s=flash.utils.getTimer();this.numTestsRun$MK$s=0;var suite=this.testSuite$MK$s["suite"]();this.totalTestCount$MK$s=suite.countTestCases();suite.runWithResult(this.testResult$MK$s)}else BrowserRunner.suiteNotFound(flash.utils.getQualifiedClassName(this.testSuite$MK$s)+" does not have a static method 'suite'.")}catch(e){if(AS3.is(e,AS3.Error)){AS3.trace("[ERROR]",e);BrowserRunner.exit(false)}else throw e;}}function run(){this.printer$MK$s=
new flexunit.textui.XmlResultPrinter(flash.utils.getQualifiedClassName(this.testSuite$MK$s).replace(/::/,"."));this.testResult$MK$s=new flexunit.framework.TestResult;this.testResult$MK$s.addListener(AS3.cast(flexunit.framework.TestListener,this.printer$MK$s));this.testResult$MK$s.addListener(AS3.cast(flexunit.framework.TestListener,this));this.onSuiteLoaded()}function testError(test,error){AS3.trace("[ERROR]","test in error",test,error,error["stack"])}function testFailure(test,error){AS3.trace("[ERROR]",
"test failed",test,error,error["stack"])}function testEnded(test){if(++this.numTestsRun$MK$s==this.totalTestCount$MK$s){var endTime=flash.utils.getTimer();var runTime=endTime-this.startTime$MK$s;this.printer$MK$s.print(this.testResult$MK$s,runTime);AS3.trace("tests run: "+this.testResult$MK$s.runCount()+" ("+"errors: "+this.testResult$MK$s.errorCount()+", "+"failures: "+this.testResult$MK$s.failureCount()+")");AS3.trace(this.printer$MK$s.getXml());var resultXml=this.printer$MK$s.getXml();this.outputTestResult$MK$s(resultXml);
this.onComplete$MK$s(this.testResult$MK$s,resultXml);BrowserRunner.exit(this.testResult$MK$s.wasSuccessful())}}function exit$static(b){var exitFunc=window["joo"]&&window["joo"]._exit;if(exitFunc)exitFunc(b)}function insertIntoDOM$static(resultXml){var pre=window.document.createElement("pre");pre.appendChild(window.document.createTextNode(resultXml));window.document.body.appendChild(pre)}return{extend:"flexunit.runner.BaseTestRunner",testResult$MK$s:null,printer$MK$s:null,startTime$MK$s:0,totalTestCount$MK$s:0,
numTestsRun$MK$s:0,testSuite$MK$s:null,constructor:BrowserRunner$,super$MK$s:function(){flexunit.runner.BaseTestRunner.prototype.constructor.apply(this,arguments)},onSuiteLoaded:onSuiteLoaded,run:run,testError:testError,testFailure:testFailure,testEnded:testEnded,statics:{main:main$static,suiteNotFound:suiteNotFound$static,exit:exit$static,insertIntoDOM:insertIntoDOM$static},requires:["AS3.Error","AS3.trace","flash.utils.getQualifiedClassName","flash.utils.getTimer","flexunit.runner.BaseTestRunner"],
uses:["flexunit.framework.TestListener","flexunit.framework.TestResult","flexunit.textui.XmlResultPrinter"]}});Ext.define("net.jangaroo.joounit.runner.DefaultJooTestRunner",function(DefaultJooTestRunner){function main$static(config){var name="DefaultJooTestRunner";var onComplete;var testClassNames=null;if(AS3.is(config,String))testClassNames=[AS3.as(config,String)];else if(AS3.is(config["tests"],Array))testClassNames=AS3.as(config["tests"],Array);if(AS3.is(config["onComplete"],Function))onComplete=AS3.as(config["onComplete"],Function);if(AS3.is(config["name"],String))name=config["name"];if(testClassNames==
null)throw new AS3.Error("No test classes specified");(new DefaultJooTestRunner(name,testClassNames,onComplete)).run()}function DefaultJooTestRunner$(name,testClassNames,onComplete){this.super$TSVD();if(arguments.length<=2)onComplete=null;this.testName$TSVD=name;this.testClassNames$TSVD=testClassNames;this.onComplete$TSVD=onComplete}function run(){AS3.trace("[INFO]","Running tests: "+this.testClassNames$TSVD);this.printer$TSVD=new flexunit.textui.XmlResultPrinter(this.testName$TSVD);this.testResult$TSVD=
new flexunit.framework.TestResult;this.testResult$TSVD.addListener(AS3.cast(flexunit.framework.TestListener,this.printer$TSVD));this.testResult$TSVD.addListener(AS3.cast(flexunit.framework.TestListener,this));this.testClassLoadErrors$TSVD=new Vector$object;joo.require(this.testClassNames$TSVD,AS3.bind(this,"onSuiteLoaded"))}function onSuiteLoaded(){if(this.testClassLoadErrors$TSVD.length>0){AS3.trace("[ERROR]","Couldn't load test classes: "+this.testClassLoadErrors$TSVD);DefaultJooTestRunner.exit(false);
return}this.testSuite$TSVD=new flexunit.framework.TestSuite;for(var i=0;i<this.testClassNames$TSVD.length;i++){var qualifiedTestClassName=this.testClassNames$TSVD[i];var testClass=joo.getQualifiedObject(qualifiedTestClassName);if(typeof testClass["suite"]=="function")this.testSuite$TSVD.addTest(testClass["suite"]());else if(AS3.is(testClass,Class))this.testSuite$TSVD.addTestSuite(testClass);else throw new AS3.Error("Not a valid test class: "+qualifiedTestClassName);}try{this.startTime$TSVD=(new Date).getTime();
this.numTestsRun$TSVD=0;this.totalTestCount$TSVD=this.testSuite$TSVD.countTestCases();AS3.trace("[INFO]","Running "+this.totalTestCount$TSVD+" tests");this.testSuite$TSVD.runWithResult(this.testResult$TSVD)}catch(e){if(AS3.is(e,AS3.Error)){AS3.trace("[ERROR]",e);DefaultJooTestRunner.exit(false)}else throw e;}}function testError(test,error){AS3.trace("[ERROR]","test in error",test,error)}function testFailure(test,error){AS3.trace("[ERROR]","test failed",test,error)}function testEnded(test){if(++this.numTestsRun$TSVD==
this.totalTestCount$TSVD){var endTime=(new Date).getTime();var runTime=endTime-this.startTime$TSVD;this.printer$TSVD.print(this.testResult$TSVD,runTime);var testResultXml=this.printer$TSVD.getXml();if(this.onComplete$TSVD!=null)this.onComplete$TSVD(this.testSuite$TSVD,this.testResult$TSVD,testResultXml);else{AS3.trace("Tests: "+this.testResult$TSVD.runCount()+" ("+"Errors: "+this.testResult$TSVD.errorCount()+", "+"Failures: "+this.testResult$TSVD.failureCount()+")");AS3.trace(this.printer$TSVD.getXml())}DefaultJooTestRunner.exit(this.testResult$TSVD.wasSuccessful())}}
function exit$static(success){if(success)AS3.trace("[INFO]","Finished test execution successfully");else AS3.trace("[ERROR]","Finished test execution with error(s)")}return{extend:"flexunit.runner.BaseTestRunner",testClassNames$TSVD:null,testClassLoadErrors$TSVD:null,testName$TSVD:null,testSuite$TSVD:null,testResult$TSVD:null,printer$TSVD:null,startTime$TSVD:0,totalTestCount$TSVD:0,numTestsRun$TSVD:0,onComplete$TSVD:null,constructor:DefaultJooTestRunner$,super$TSVD:function(){flexunit.runner.BaseTestRunner.prototype.constructor.apply(this,
arguments)},run:run,onSuiteLoaded:onSuiteLoaded,testError:testError,testFailure:testFailure,testEnded:testEnded,statics:{main:main$static,exit:exit$static},requires:["AS3.Error","AS3.trace","flexunit.runner.BaseTestRunner"],uses:["flexunit.framework.TestListener","flexunit.framework.TestResult","flexunit.framework.TestSuite","flexunit.textui.XmlResultPrinter"]}});
//# sourceMappingURL=net.jangaroo__joounit.js.map
