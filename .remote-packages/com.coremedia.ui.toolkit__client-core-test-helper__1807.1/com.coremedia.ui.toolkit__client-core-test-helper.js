Ext.define("com.coremedia.ui.PerformanceTestHelper",function(PerformanceTestHelper){var EXPECTED_RICH_TEXT_AREAS$static=0;function PerformanceTestHelper$(){}function openAllInTab$static(list){PerformanceTestHelper.TEST_RUNNING=true;function next(){EXPECTED_RICH_TEXT_AREAS$static+=2;var contentId=list.shift();openContentInTab$static(contentId);AS3.trace(PerformanceTestHelper,"opening content",contentId,"left for opening",list)}function waitForContentOpened(){var mc=Ext.ComponentManager.getAll().filter(function(cmp){return cmp.xtype===
"com.coremedia.ui.config.richTextArea"});if(mc.length==EXPECTED_RICH_TEXT_AREAS$static&&AS3.cast(Ext.Component,mc[mc.length-1]).rendered)if(list.length>0)next();else{AS3.trace(PerformanceTestHelper,"all contents opened");window.clearInterval(interval);PerformanceTestHelper.TEST_RUNNING=false}}next();var interval=window.setInterval(waitForContentOpened,100)}function openContentInTab$static(contentId){var data=joo.getOrCreatePackage("com.coremedia.ui.data");var sdk=joo.getOrCreatePackage("com.coremedia.cms.editor.sdk");
sdk.editorContext.getContentTabManager().openDocument(data.beanFactory.getRemoteBean("content/"+contentId))}return{constructor:PerformanceTestHelper$,statics:{TEST_RUNNING:false,openAllInTab:openAllInTab$static},requires:["AS3.trace","Ext.Component","Ext.ComponentManager"]}});Ext.define("com.coremedia.ui.data.test.MockAjax",function(MockAjax){function served_(){this.served$G3qc={}}function mockAjax$static(mockResponses){if(arguments.length<=0)mockResponses=null;if(MockAjax.instance)throw new AS3.Error("A previously created instance of MockAjax is still running. Call destroyMock() in the tearDown() method of the other test.");MockAjax.instance=new MockAjax(mockResponses);MockAjax.instance["defaultHeaders"]=window.Ext.Ajax.defaultHeaders;window.Ext.Ajax=MockAjax.instance;
return MockAjax.instance}function destroyMock$static(){if(MockAjax.instance){MockAjax.instance.destroy();MockAjax.instance=null}}function addMockCalls$static(calls){MockAjax.instance.addMockCallsInternal$G3qc(calls)}function MockAjax$(mockResponses){if(arguments.length<=0)mockResponses=null;this.super$G3qc(AS3.cast(Ext.data.Connection,{}));served_.call(this);this.mockResponses$G3qc=mockResponses||[]}function calculateRemoteURI$static(uri){return com.coremedia.ui.data.test.MockXMLHttpRequest.REMOTE_SERVICE_ABSOLUTE_URI.relativize(com.coremedia.ui.data.test.MockXMLHttpRequest.APPLICATION_URI.resolve(net.jangaroo.net.URIUtils.parse(uri))).toString()}
function request(options){var this$=this;this.requestCount$G3qc++;var requestPath=calculateRemoteURI$static(options.url);var method=options.method||"GET";var params=Ext.urlDecode(Ext.urlEncode(options.params));for(var i=0;i<this.mockResponses$G3qc.length;i++){var requestResponse=this.mockResponses$G3qc[i];var mockRequest=requestResponse.request;if(match$static(method,mockRequest,requestPath,params,options.jsonData,options.headers)){var mockResponse=requestResponse.response;var success=!mockResponse.code||
mockResponse.code>=200&&mockResponse.code<300;var callbackName=success?"success":"failure";this.executeEventually$G3qc(function(){if(this$._destroyed$G3qc)return;var mockXMLHttpRequest=new com.coremedia.ui.data.test.MockXMLHttpRequest(mockRequest,mockResponse,MockAjax.buildBody(mockResponse));var mock=this$.remember$G3qc(method,mockRequest,mockResponse,mockXMLHttpRequest);this$.fireEvent(MockAjax.REQUEST_RECEIVED_EVENT_NAME,mock);mockXMLHttpRequest["argument"]=options?options.argument:null;if(options[callbackName])options[callbackName].call(options.scope,
mockXMLHttpRequest,options);if(options.callback)options.callback.call(options.scope,options,success,mockXMLHttpRequest)});return AS3.cast(Ext.data.request.Base,{})}}throw new AS3.Error("No mock response found for request "+method+" "+requestPath+", params \x3d "+Ext.JSON.encode(options.params)+", json \x3d "+Ext.JSON.encode(options.jsonData)+", headers \x3d "+Ext.JSON.encode(options.headers));}function executeEventually(f){if(!this.pending$G3qc){this.pending$G3qc=[];window.setTimeout(AS3.bind(this,
"executeNow"),10)}this.pending$G3qc.push(f)}function executeNow(){var toDo=this.pending$G3qc;this.pending$G3qc=null;if(toDo)for(var $1=0;$1<toDo.length;++$1){var f=toDo[$1];f()}}function isIdle(){return!this.pending$G3qc}function remember(method,mockRequest,mockResponse,mockXMLHttpRequest){var servedPerMethod=this.served$G3qc[method]||{};this.served$G3qc[method]=servedPerMethod;var servedPerUri=servedPerMethod[mockRequest.uri]||[];servedPerMethod[mockRequest.uri]=servedPerUri;var mock={method:method,
request:mockRequest,response:mockResponse,xmlHttpRequest:mockXMLHttpRequest};servedPerUri.push(mock);return mock}function getServedResponses(uri,method){if(arguments.length<=1)method="GET";var servedPerMethod=this.served$G3qc[method]||{};return servedPerMethod[uri]||[]}function clearServedResponses(uri,method){if(arguments.length<=1)method="GET";var servedPerMethod=this.served$G3qc[method]||{};delete servedPerMethod[uri]}function getAllServedResponses(){return this.served$G3qc}function getRequestCount(){return this.requestCount$G3qc}
function match$static(method,mockRequest,requestPath,requestParams,requestJsonData,requestHeaders){var mockRequestUri=mockRequest.uri;if((mockRequest.method||"GET")!==method)return false;var mockRequestPath;var mockParams=undefined;var mockRequestJsonData=undefined;if(method==="GET"){var q=mockRequestUri.indexOf("?");var mockRequestQueryString=q>=0?mockRequestUri.substring(q+1):"";mockParams=Ext.urlDecode(mockRequestQueryString);mockRequestPath=q>=0?mockRequestUri.substring(0,q):mockRequestUri}else{if(mockRequest.contentType===
MockAjax.CONTENT_TYPE_APPLICATION_FORM_URLENCODED){var encodedBody=MockAjax.buildBody(mockRequest);mockParams=formUrlDecode$static(encodedBody)}else mockRequestJsonData=mockRequest.body;mockRequestPath=mockRequestUri}var mockRequestHeaders=mockRequest.headers;return mockRequestPath===requestPath&&requestMatches$static(mockParams,requestParams)&&requestMatches$static(mockRequestJsonData,requestJsonData)&&(!mockRequestHeaders||requestMatches$static(mockRequestHeaders,requestHeaders))}function formUrlDecode$static(string){if(!string)return{};
var result={};var pairs=string.split("\x26");pairs.forEach(function(p){var pair=p.replace(/[+]/g," ").split("\x3d");result[decodeURIComponent(pair[0])]=decodeURIComponent(pair[1])});return result}function requestMatches$static(expected,actual){if(!expected)expected={};if(!actual)actual={};return MockAjax.deepEquals(expected,actual)}function deepEquals$static(expected,actual){if(AS3.is(expected,Array)){if(!AS3.is(actual,Array))return false;return MockAjax.arrayEquals(AS3.as(expected,Array),AS3.as(actual,
Array))}if(expected&&expected.constructor===Object){if(!actual||actual.constructor!==Object)return false;return MockAjax.objectEquals(expected,actual)}return expected===actual}function arrayEquals$static(expected,actual){if(expected.length!=actual.length)return false;for(var i=0;i<expected.length;i++)if(!MockAjax.deepEquals(expected[i],actual[i]))return false;return true}function objectEquals$static(expected,actual){var p;for(p in expected)if(!MockAjax.deepEquals(expected[p],actual[p]))return false;
for(p in actual)if(!(p in expected))return false;return true}function addMockRequests(responses){var this$=this;responses.forEach(function(response){this$.mockResponses$G3qc.push(response)})}function addJsonGetMockRequests(responses){for(var uri in responses)if(responses.hasOwnProperty(uri))this.mockResponses$G3qc.push({"request":{"uri":uri,"method":"GET"},"response":{"code":200,"body":responses[uri]}})}function buildBody$static(response){var contentType=response.contentType;contentType=contentType||
(response.headers?response.headers[com.coremedia.ui.data.test.MockXMLHttpRequest.CONTENT_TYPE_HEADER]:undefined);contentType=contentType||com.coremedia.ui.data.test.MockXMLHttpRequest.CONTENT_TYPE_JSON;if(response.body)return contentType===com.coremedia.ui.data.test.MockXMLHttpRequest.CONTENT_TYPE_JSON?Ext.JSON.encode(response.body):response.body;var unsupportedBodyTypes=["bodyBase64","bodyMultipart","bodyResource","bodyFile"];unsupportedBodyTypes.forEach(function(bodyType){if(response[bodyType])throw new AS3.Error("request."+
bodyType+" not implemented");});return""}function addMockCallsInternal(calls){this.mockResponses$G3qc=this.mockResponses$G3qc.concat(calls)}function destroy(){var params=Array.prototype.slice.call(arguments);this._destroyed$G3qc=true}return{extend:"Ext.data.Connection",metadata:{"":["Event",["name","received"]]},pending$G3qc:null,_destroyed$G3qc:false,mockResponses$G3qc:null,requestCount$G3qc:0,constructor:MockAjax$,super$G3qc:function(){Ext.data.Connection.prototype.constructor.apply(this,arguments)},
request:request,executeEventually$G3qc:executeEventually,executeNow:executeNow,isIdle:isIdle,remember$G3qc:remember,getServedResponses:getServedResponses,clearServedResponses:clearServedResponses,getAllServedResponses:getAllServedResponses,getRequestCount:getRequestCount,addMockRequests:addMockRequests,addJsonGetMockRequests:addJsonGetMockRequests,addMockCallsInternal$G3qc:addMockCallsInternal,destroy:destroy,statics:{CONTENT_TYPE_APPLICATION_FORM_URLENCODED:"application/x-www-form-urlencoded",REQUEST_RECEIVED_EVENT_NAME:"received",
instance:null,mockAjax:mockAjax$static,destroyMock:destroyMock$static,addMockCalls:addMockCalls$static,deepEquals:deepEquals$static,arrayEquals:arrayEquals$static,objectEquals:objectEquals$static,buildBody:buildBody$static},requires:["AS3.Error","Ext","Ext.JSON","Ext.data.Connection","Ext.data.request.Base","net.jangaroo.net.URIUtils"],uses:["com.coremedia.ui.data.test.MockXMLHttpRequest"]}});Ext.define("com.coremedia.ui.data.test.MockXMLHttpRequest",function(MockXMLHttpRequest){function APPLICATION_URI$static_(){MockXMLHttpRequest.APPLICATION_URI=net.jangaroo.net.URIUtils.parse(window.location.href)}function REMOTE_SERVICE_ABSOLUTE_URI$static_(){MockXMLHttpRequest.REMOTE_SERVICE_ABSOLUTE_URI=MockXMLHttpRequest.APPLICATION_URI.resolve(net.jangaroo.net.URIUtils.parse("api/"))}function MockXMLHttpRequest$(request,response,responseText){this.request$m8lM=request;this.response$m8lM=response;
this.responseText=responseText;this.status=response.code||200}function getResponseHeader(header){header=header.toLowerCase();var result=this.response$m8lM.headers?this.response$m8lM.headers[header]:undefined;if("location"===header)result=MockXMLHttpRequest.REMOTE_SERVICE_ABSOLUTE_URI.resolve(net.jangaroo.net.URIUtils.parse(result)).toString();if(!result)if(MockXMLHttpRequest.CONTENT_TYPE_HEADER===header)result=MockXMLHttpRequest.CONTENT_TYPE_JSON;return result}function getAllResponseHeaders(){return notImpl$static()}
function send(body){notImpl$static()}function open(method,url,async,user,password){switch(Math.max(arguments.length,2)){case 2:async=true;case 3:user=null;case 4:password=null}notImpl$static()}function setRequestHeader(header,value){notImpl$static()}function overrideMimeType(mimetype){notImpl$static()}function addEventListener(eventType,handler,capture){notImpl$static()}function removeEventListener(eventType,handler,capture){notImpl$static()}function abort(){notImpl$static()}function notImpl$static(){throw new AS3.Error("not implemented");
}return{request$m8lM:null,response$m8lM:null,readyState:4,responseText:null,responseXML:null,status:0,statusText:"\x3cstatus text\x3e",constructor:MockXMLHttpRequest$,getResponseHeader:getResponseHeader,getAllResponseHeaders:getAllResponseHeaders,send:send,open:open,setRequestHeader:setRequestHeader,overrideMimeType:overrideMimeType,addEventListener:addEventListener,removeEventListener:removeEventListener,abort:abort,statics:{CONTENT_TYPE_HEADER:"content-type",CONTENT_TYPE_JSON:"application/json",
APPLICATION_URI:undefined,REMOTE_SERVICE_ABSOLUTE_URI:undefined,__initStatics__:function(){APPLICATION_URI$static_();REMOTE_SERVICE_ABSOLUTE_URI$static_()}},requires:["AS3.Error","net.jangaroo.net.URIUtils"]}});Ext.define("com.coremedia.ui.data.test.Step",function(Step){function Step$(msg,condition,callback,passThrough){this.msg=msg;this.condition=condition;this.callback=callback||Ext.emptyFn;this.passThrough=passThrough}return{msg:null,condition:null,callback:null,passThrough:undefined,constructor:Step$,requires:["Ext"]}});Ext.define("com.coremedia.ui.data.test.ActionStep",function(ActionStep){function ActionStep$(msg,callback,passThrough){this.super$Ltb_(msg,function(){return true},callback,passThrough)}return{extend:"com.coremedia.ui.data.test.Step",constructor:ActionStep$,super$Ltb_:function(){com.coremedia.ui.data.test.Step.prototype.constructor.apply(this,arguments)},requires:["com.coremedia.ui.data.test.Step"]}});Ext.define("com.coremedia.ui.data.test.AbstractRemoteTest",function(AbstractRemoteTest){function waitUntil(msg,condition,callback,passThrough){window.console["info"](msg);if(!callback)callback=function(){};if(condition()){callback(passThrough);return}var timer;var checkpoint=this.addAsync(callback,5E3,passThrough,function(){window.clearInterval(timer);flexunit.framework.Assert.fail("timeout: "+msg)});var timerFun=function(){if(condition()){window.clearInterval(timer);checkpoint()}};timer=window.setInterval(timerFun,
this.sleepTime$j1SM)}function addAsyncAssertParameterEquals(timeout,expected){return this.addAsync(function(value){flexunit.framework.Assert.assertEquals(expected,value)},timeout)}function chain(){var steps=Array.prototype.slice.call(arguments);this.chainOnArray$j1SM(steps)}function chainOnArray(steps){var this$=this;var mySteps=steps.slice();var step=mySteps.shift();if(step){var callback=function(){step.callback(step.passThrough);this$.chainOnArray$j1SM(mySteps)};this.waitUntil(step.msg,step.condition,
callback,step.passThrough)}}function getMockCalls(){return[]}function setUp(){flexunit.framework.TestCase.prototype.setUp.call(this);var mockCalls=this.getMockCalls();if(mockCalls&&mockCalls.length>0)com.coremedia.ui.data.test.MockAjax.mockAjax(mockCalls)}function tearDown(){com.coremedia.ui.data.test.MockAjax.destroyMock();flexunit.framework.TestCase.prototype.tearDown.call(this)}function assertAjaxResponseServed$static(uriPath,method,expectedDescription){if(arguments.length<=2)expectedDescription=
null;var servedResponses=com.coremedia.ui.data.test.MockAjax.instance.getServedResponses(uriPath,method);flexunit.framework.Assert.assertEquals(1,servedResponses.length);if(expectedDescription)flexunit.framework.Assert.assertEquals(expectedDescription,servedResponses[0].response.description)}function setSleepTime(sleepTime){this.sleepTime$j1SM=sleepTime}function AbstractRemoteTest$(){this.super$j1SM()}return{extend:"flexunit.framework.TestCase",sleepTime$j1SM:500,waitUntil:waitUntil,addAsyncAssertParameterEquals:addAsyncAssertParameterEquals,
chain:chain,chainOnArray$j1SM:chainOnArray,getMockCalls:getMockCalls,setUp:setUp,tearDown:tearDown,setSleepTime:setSleepTime,super$j1SM:function(){flexunit.framework.TestCase.prototype.constructor.apply(this,arguments)},constructor:AbstractRemoteTest$,statics:{assertAjaxResponseServed:assertAjaxResponseServed$static},requires:["flexunit.framework.Assert","flexunit.framework.TestCase"],uses:["com.coremedia.ui.data.test.MockAjax"]}});Ext.define("com.coremedia.joounit.Mockery",function(Mockery){function mock$static(object){var interfaces=Array.prototype.slice.call(arguments,1);return new (Ext.define(null,Ext.apply({mixins:interfaces?interfaces.map(AS3.bind(Ext,"getClassName")):[]},object)))}function Mockery$(){}return{constructor:Mockery$,statics:{mock:mock$static},requires:["Ext"]}});
//# sourceMappingURL=com.coremedia.ui.toolkit__client-core-test-helper.js.map
