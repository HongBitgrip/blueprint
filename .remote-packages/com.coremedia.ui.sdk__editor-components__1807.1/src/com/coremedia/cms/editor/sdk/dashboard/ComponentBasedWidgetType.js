Ext.define("com.coremedia.cms.editor.sdk.dashboard.ComponentBasedWidgetType", function(ComponentBasedWidgetType) {/*package com.coremedia.cms.editor.sdk.dashboard{
import com.coremedia.cms.editor.sdk.dashboard.*;
import ext.Component;
import net.jangaroo.ext.Exml;
[PublicApi]
/**
 A widget type that is based on a component configuration.
 * /
public class ComponentBasedWidgetType extends ComponentBasedWidgetTypeBase{

    public*/function ComponentBasedWidgetType$(config/*:ComponentBasedWidgetType = null*/){if(arguments.length<=0)config=null;
    var config_$1/*: com.coremedia.cms.editor.sdk.dashboard.ComponentBasedWidgetTypeBase*/ =AS3.cast(com.coremedia.cms.editor.sdk.dashboard.ComponentBasedWidgetTypeBase,{});
    var defaults_$1/*:ComponentBasedWidgetType*/ =AS3.cast(ComponentBasedWidgetType,{});
    config = net.jangaroo.ext.Exml.apply(defaults_$1,config);
    net.jangaroo.ext.Exml.apply(config_$1,config);
    this.super$1dme(config_$1);
  }/*

    /**
     The id of this widget type. Defaults to the xtype of the widget component.
     * /
    [Bindable]
    public var id_:String;


    /**
     A config object of the component used for displaying widgets of this widget type.
     * /
    [Bindable]
    public var widgetComponent:ext.Component;


    /**
     A config object of the component used for editing the state of widgets of this widget type.
     * /
    [Bindable]
    public var editorComponent:ext.Component;


    /**
     The icon class to use for the widget type.
     * /
    [Bindable]
    public var iconCls:String;


    /**
     The name to use in the widget type drop-down.
     * /
    [Bindable]
    public var name:String;


    /**
     The default title to use in the widget header
     if the state does not contain a title property.
     Defaults to the name property.
     * /
    [Bindable]
    public var title:String;


    /**
     The description to use in the widget creation ribbon.
     * /
    [Bindable]
    public var description:String;


    /**
     The description to use in the widget creation ribbon as HTML code.
     If not set, the HTML description is generated by encoding the
     value of the description attribute.
     * /
    [Bindable]
    public var descriptionHTML:String;


    /**
     The default number of rows taken by this widget type. Typically 1, 2 (occasionally), or 3 (rarely). Default 1.
     * /
    [Bindable]
    public var defaultRowspan:uint;


    /**
     Whether widgets of this type can be created manually with an
     initially empty configuration. Default true.
     * /
    [Bindable]
    public var manuallyCreatable:Boolean;}}

============================================== Jangaroo part ==============================================*/
    return {
      extend: "com.coremedia.cms.editor.sdk.dashboard.ComponentBasedWidgetTypeBase",
      metadata: {"": ["PublicApi"]},
      constructor: ComponentBasedWidgetType$,
      super$1dme: function() {
        com.coremedia.cms.editor.sdk.dashboard.ComponentBasedWidgetTypeBase.prototype.constructor.apply(this, arguments);
      },
      config: {
        id_: null,
        widgetComponent: null,
        editorComponent: null,
        iconCls: null,
        name: null,
        title: null,
        description: null,
        descriptionHTML: null,
        defaultRowspan: 0,
        manuallyCreatable: false
      },
      requires: [
        "com.coremedia.cms.editor.sdk.dashboard.ComponentBasedWidgetTypeBase",
        "net.jangaroo.ext.Exml"
      ]
    };
});
