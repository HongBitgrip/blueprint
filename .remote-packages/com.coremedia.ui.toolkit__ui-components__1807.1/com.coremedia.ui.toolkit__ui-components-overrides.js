if(!Ext.ClassManager.isCreated("JooOverrides.Ext.form.field"))Ext.define("JooOverrides.Ext.form.field",{override:"Ext.form.field.Base",beforeBlur:function(){var me=this,task=me.checkChangeTask;me.callParent(arguments);if(task){task.cancel();me.checkChange()}}});Ext.define("com.coremedia.ui.overrides.AutomaticWarnErrorTooltipOverride",{override:"Ext.tip.ToolTip",setTarget:function(target){var me=this,listeners;if(me.targetListeners)me.targetListeners.destroy();if(target){me.target=target=Ext.get(target.el||target);listeners={mouseover:"onTargetOver",focusmove:"onTargetFocus",mouseout:"onTargetOut",mousemove:"onMouseMove",tap:"onTargetTap",scope:me,destroyable:true};me.targetListeners=target.on(listeners)}else me.target=null},onTargetFocus:function(event){if(event.target){var targetEl=
Ext.get(event.target);if(targetEl){var targetCmp;while(targetEl&&!targetCmp){targetCmp=targetEl.component;targetEl=targetEl.up()}if(targetCmp&&AS3.is(targetCmp,com.coremedia.ui.mixins.ValidationStateMixin)){var eventX=Ext.get(event.target).getBox().x-10;var eventY=Ext.get(event.target).getBox().y+Ext.get(event.target).getBox().height-10;this.showErrorWarnTooltip(targetCmp,event,eventX,eventY);targetCmp.on("validationStateChanged",this.showErrorWarnTooltip,this,{args:[targetCmp,event,eventX,eventY]});
targetCmp.on("validationMessageChanged",this.showErrorWarnTooltip,this,{args:[targetCmp,event,eventX,eventY]});targetCmp.on("blur",function(){targetCmp.un("validationStateChanged",this.showErrorWarnTooltip,this,{args:[targetCmp,event,eventX,eventY]});targetCmp.un("validationMessageChanged",this.showErrorWarnTooltip,this,{args:[targetCmp,event,eventX,eventY]});this.hideTooltipForComponent(targetCmp)},this,{single:true})}}}},showErrorWarnTooltip:function(targetCmp,event,eventX,eventY){event.point=null;
event.pageX=eventX;event.pageY=eventY;var validationState=targetCmp.getValidationState();if(validationState===com.coremedia.ui.mixins.ValidationState.WARNING||validationState===com.coremedia.ui.mixins.ValidationState.ERROR)this.onTargetOver(event);else this.hideTooltipForComponent(targetCmp)},hideTooltipForComponent:function(cmp){var activeFloating=Ext.WindowManager.getActive();if(activeFloating&&AS3.is(activeFloating,Ext.tip.ToolTip)&&activeFloating.triggerElement&&Ext.get(activeFloating.triggerElement).component===
cmp)activeFloating.hide()}});Ext.define("com.coremedia.ui.overrides.BoxOverflowMenuAddAriaLabelOverride",{override:"Ext.layout.container.boxOverflow.Menu",getSuffixConfig:function(){var me=this,layout=me.layout,owner=layout.owner,oid=owner.id;me.menu=new Ext.menu.Menu({listeners:{scope:me,beforeshow:me.beforeMenuShow}});me.menuTrigger=new Ext.button.Button({ariaLabel:mx.resources.ResourceManager.getInstance().getString("com.coremedia.ui.UI","BoxOverflowButton_aria_label"),id:oid+"-menu-trigger",cls:me.menuCls+"-after "+Ext.baseCSSPrefix+
"toolbar-item",plain:owner.usePlainButtons,ownerCt:owner,ownerLayout:layout,iconCls:Ext.baseCSSPrefix+me.getOwnerType(owner)+"-more-icon",ui:owner.defaultButtonUI||"default",menu:me.menu,showEmptyMenu:true,getSplitCls:function(){return""}});return me.menuTrigger.getRenderTree()}});Ext.define("com.coremedia.ui.overrides.BoxOverflowMenuZIndexOverride",{override:"Ext.layout.container.boxOverflow.Menu",getSuffixConfig:function(){var me=this;var result=me.callParent(arguments);me.menu.mon(Ext.GlobalEvents,"added",me.checkReRegister,me.menu);return result},checkReRegister:function(addedCmp){if(this.isDescendantOf(addedCmp))this.registerWithOwnerCt()}});Ext.define("com.coremedia.ui.overrides.ButtonAriaReadyOverride",{override:"Ext.button.Button",constructor:function(config){this.syncAriaLabelAndText=!config.ariaLabel;this.callParent(arguments);this.ariaCheck()},setAriaLabel:function(){this.callParent(arguments);this.syncAriaLabelAndText=false},updateText:function(text,oldText){this.callParent(arguments);if(text&&this.syncAriaLabelAndText)this.updateAriaLabel(text)},ariaCheck:function(){if(!this.ariaLabel&&this.ariaRole!=="presentation"){var msg=
"No aria-label found for button with id '"+this.id+"'. "+"For each button, either set the 'ariaLabel' or 'text' property.";Ext.ariaWarn(this,msg)}}});(function(){Ext.define("com.coremedia.ui.overrides.ButtonOverride",{override:"Ext.button.Button",initComponent:function(){var me=this;me.callParent(arguments);me.enableToggle&&me.addCls("cm-button-toggle-enabled")},afterRender:function(){var me=this;me.callParent(arguments);var scaleCls=com.coremedia.ui.util.IconUtils.calculateIconScaleCls(me.iconCls,me.scale);scaleCls&&me.btnIconEl.addCls(scaleCls)},setScale:function(scale){var me=this,oldScale=me.scale;me.callParent(arguments);var iconEl=me.btnIconEl;
if(iconEl&&oldScale!==me.scale){var oldScaleCls=com.coremedia.ui.util.IconUtils.calculateIconScaleCls(me.iconCls,oldScale);var scaleCls=com.coremedia.ui.util.IconUtils.calculateIconScaleCls(me.iconCls,me.scale);oldScaleCls&&iconEl.removeCls(oldScaleCls);scaleCls&&iconEl.addCls(scaleCls)}},setIconCls:function(iconCls){var me=this,oldIconCls=me.iconCls;me.callParent(arguments);var iconEl=me.btnIconEl;if(iconEl&&oldIconCls!==me.iconCls){var oldScaleCls=com.coremedia.ui.util.IconUtils.calculateIconScaleCls(oldIconCls,
me.scale);var scaleCls=com.coremedia.ui.util.IconUtils.calculateIconScaleCls(me.iconCls,me.scale);oldScaleCls&&iconEl.removeCls(oldScaleCls);scaleCls&&iconEl.addCls(scaleCls)}},uses:["com.coremedia.ui.util.IconUtils"]})})();Ext.define("com.coremedia.ui.overrides.ComponentOverride",{override:"Ext.Component",getXTypes:function(){var self=this.self,xtypes,parentPrototype,parentXtypes;if(!self.xtypes){xtypes=[];parentPrototype=this;while(parentPrototype){if(parentPrototype.hasOwnProperty("xtype")){parentXtypes=parentPrototype.xtypes;if(parentXtypes!==undefined)xtypes.unshift.apply(xtypes,parentXtypes)}parentPrototype=parentPrototype.superclass}self.xtypeChain=xtypes;self.xtypes=xtypes.join("/")}return self.xtypes}});Ext.define("com.coremedia.ui.overrides.ComponentHiddenClsOverride",{override:"Ext.Component",hiddenCls:"cm-hidden",show:function(){!this.destroyed&&this.removeCls(this.hiddenCls);this.callParent(arguments)},hide:function(){this.callParent(arguments);!this.destroyed&&this.getEl()&&this.getEl().getData()&&this.addCls(this.hiddenCls)},initComponent:function(){this.callParent(arguments);this.hidden&&this.getEl()&&this.getEl().getData()&&this.addCls(this.hiddenCls)}});Ext.define("com.coremedia.ui.overrides.ComponentOverride",{override:"Ext.container.Container",getRefItems:function(deep){var result=[];try{result=this.callParent(arguments)}catch(err){}return result}});Ext.define("com.coremedia.ui.overrides.DragTrackerOverride",{override:"Ext.dd.DragTracker",onStart:function(){this.callParent(arguments);com.coremedia.ui.components.IFrameMgr.getInstance().showShims()},onEnd:function(){com.coremedia.ui.components.IFrameMgr.getInstance().hideShims();this.callParent(arguments)},uses:["com.coremedia.ui.components.IFrameMgr"]});Ext.define("com.coremedia.ui.overrides.DragZoneOverride",{override:"Ext.dd.DragZone",startDrag:function(){this.callParent(arguments);com.coremedia.ui.components.IFrameMgr.getInstance().showShims()},endDrag:function(){com.coremedia.ui.components.IFrameMgr.getInstance().hideShims();this.callParent(arguments)},uses:["com.coremedia.ui.components.IFrameMgr"]});Ext.define("com.coremedia.ui.overrides.EditorOverride",{override:"Ext.Editor",initComponent:function(){var me=this,editorDefaultSkin="opaque";if(me.field)if(me.field.ui==="default"&&me.field.config.ui===undefined)me.field.ui=editorDefaultSkin;me.callParent(arguments)}});Ext.define("com.coremedia.ui.overrides.FocusableContainerDisableFocusableOverride",{override:"Ext.mixin.FocusableContainer",requires:["com.coremedia.ui.mixins.MixinOverrideUtil"],privates:{onFocusableChildDisable:function(child){this.callParent(arguments);this.deactivateFocusable(child)}}},function(){com.coremedia.ui.mixins.MixinOverrideUtil.reapplyMembers(this,["onFocusableChildDisable"])});Ext.define("com.coremedia.ui.overrides.FocusableUpdateMaskStateOverride",{override:"Ext.Component",privates:{updateMaskState:function(state,mask){var me=this,ariaEl=me.ariaEl.dom,value;if(state){me.disableTabbing();me.setMasked(true);if(ariaEl){ariaEl.setAttribute("aria-busy","true");value=ariaEl.getAttribute("aria-describedby");if(value)me._savedAriaDescribedBy=value;ariaEl.setAttribute("aria-describedby",mask.ariaEl.id)}}else{me.enableTabbing();me.setMasked(false);if(ariaEl){ariaEl.removeAttribute("aria-busy");
value=ariaEl.getAttribute("aria-describedby");if(value===mask.ariaEl.id)if(me._savedAriaDescribedBy){ariaEl.setAttribute("aria-describedby",me._savedAriaDescribedBy);delete me._savedAriaDescribedBy}else ariaEl.removeAttribute("aria-describedby")}}}}});(function(){function applyOverriddenMixinMethods(overriddenMixin,patchedMethods){var mixinId=overriddenMixin.prototype&&overriddenMixin.prototype.mixinId;if(!mixinId)throw new Error("Provided class does not override a mixin!");Ext.Object.each(Ext.ClassManager["classes"],function(name,cls){var clsProto=cls&&cls.prototype;if(clsProto&&clsProto.mixins&&clsProto.mixins.hasOwnProperty(mixinId))patchedMethods.forEach(function(patchedMethod){clsProto[patchedMethod]=overriddenMixin.prototype[patchedMethod]})})}
Ext.define("com.coremedia.ui.overrides.LabelableOverride",{override:"Ext.form.Labelable",require:["com.coremedia.ui.components.StatefulQuickTip","com.coremedia.ui.mixins.ValidationState"],setFieldLabel:function(){var me=this,hideLabel=me.hideLabel;if(me.rendered&&me.hideLabel){Ext.suspendLayouts();try{me.callParent(arguments);me.setHideLabel(!hideLabel);me.setHideLabel(hideLabel)}finally{Ext.resumeLayouts(true)}}else me.callParent(arguments)},statics:{initTip:function(){var tip=this.tip,cfg,copy;
if(tip)return;cfg={id:"ext-form-error-tip",sticky:true,validationState:com.coremedia.ui.mixins.ValidationState.ERROR};if(Ext.supports.Touch){cfg.dismissDelay=0;cfg.anchor="top";cfg.showDelay=0;cfg.listeners={beforeshow:function(){this.minWidth=Ext.fly(this.anchorTarget).getWidth()}}}tip=this.tip=Ext.create("com.coremedia.ui.components.StatefulQuickTip",cfg);copy=Ext.apply({},tip.tagConfig);copy.attribute="errorqtip";tip.setTagConfig(copy)}}},function(createdCls){applyOverriddenMixinMethods(createdCls,
["setFieldLabel"])})})();Ext.define("com.coremedia.ui.overrides.LoadMaskOverride",{override:"Ext.LoadMask",baseCls:"cm-loadmask"},function(){Ext.LoadMask.prototype.focusable=false});Ext.define("com.coremedia.ui.overrides.MenuFocusOverride",{override:"Ext.menu.Menu",show:function(){this.callParent(arguments);if(!this.up()){this.enableFocusableContainer=false;this.el.dom.focus();this.enableFocusableContainer=true}}});Ext.define("com.coremedia.ui.overrides.MessageBoxOverride",{override:"Ext.window.MessageBox",initComponent:function(){this.callParent(arguments);var fbar=this.query("\x3e toolbar[dock\x3d'bottom']")[0];fbar&&fbar.layout&&fbar.layout.setPack("end")},makeButton:function(btnIdx){var btn=this.callParent(arguments);if(btn)if(["ok","yes"].indexOf(this.buttonIds[btnIdx])>-1)btn.setUI(com.coremedia.ui.skins.ButtonSkin.FOOTER_PRIMARY.getSkin());else btn.setUI(com.coremedia.ui.skins.ButtonSkin.FOOTER_SECONDARY.getSkin());
return btn},uses:["com.coremedia.ui.skins.ButtonSkin"]});Ext.define("com.coremedia.ui.overrides.PanelOverride",{override:"Ext.panel.Panel",getExpandToolText:function(){return this.resourceManager.getString("com.coremedia.ui.UI","Expand_Tool_text")},getCollapseToolText:function(){return this.resourceManager.getString("com.coremedia.ui.UI","Collapse_Tool_text")},getLocaleText:function(){return this.resourceManager.getString("com.coremedia.ui.UI","Locale_text")},setTitle:function(title){this.callParent(arguments);var titleText=this.title?this.title:" ";if(this.getLocaleText()===
"DE"){this.expandToolText=titleText+" "+this.getExpandToolText();this.collapseToolText=titleText+" "+this.getCollapseToolText()}else{this.expandToolText=this.getExpandToolText()+" "+titleText;this.collapseToolText=this.getCollapseToolText()+" "+titleText}}});Ext.define("com.coremedia.ui.overrides.QuickTipManagerOverride",{override:"Ext.tip.QuickTipManager",require:"com.coremedia.ui.components.StatefulQuickTip",init:function(autoRender,config){var me=this;me.callParent([autoRender,Ext.apply(config||{},{className:"com.coremedia.ui.components.StatefulQuickTip"})])}});Ext.define("com.coremedia.ui.overrides.RowContextTableOverride",{override:"Ext.panel.Table",onItemAdd:function(){this.freeRowContexts=this.freeRowContexts||[];this.freeRowContexts.forEach(function(context){context.destroy&&context.destroy()});this.freeRowContexts=[];this.callParent(arguments)}});Ext.define("com.coremedia.ui.overrides.RowModelOverride",{override:"Ext.selection.RowModel",getSelection:function(){var selection=this.callParent(),store=this.getStore();if(selection&&store)selection=selection.sort(function(recordA,recordB){var indexA=store.indexOf(recordA),indexB=store.indexOf(recordB);if(indexA<indexB)return-1;if(indexA>indexB)return 1;return 0});return selection}});Ext.define("com.coremedia.ui.overrides.RowWidgetPluginOverride",{override:"Ext.grid.plugin.RowWidget",privates:{viewOverrides:{handleEvent:function(e){if(e.getTarget("."+this.rowExpander.rowIdCls,this.body)&&e.type!=="mouseenter"&&e.type!=="mouseover"&&e.type!=="mouseout")return;this.callParent([e])},onFocusEnter:function(e){if(e.event.getTarget("."+this.rowExpander.rowIdCls,this.body))return;this.callParent([e])},toggleChildrenTabbability:function(enableTabbing){var focusEl=this.getTargetEl(),rows=
this.all,i;for(i=rows.startIndex;i<=rows.endIndex;i++){focusEl=Ext.fly(this.getRow(rows.item(i)));if(enableTabbing)focusEl.restoreTabbableState(true);else focusEl.saveTabbableState({skipSelf:true,includeSaved:false})}}}}});Ext.define("com.coremedia.ui.overrides.ShadowOverride",{override:"Ext.dom.Shadow",beforeShow:function(){var me=this,style=me.el.dom.style,shim=me.shim;if(Ext.supports.CSS3BoxShadow)style[me.boxShadowProperty]="0 0 "+(me.offset+2)+"px 2px rgba(0,0,0, 0.5)";else style.filter="progid:DXImageTransform.Microsoft.alpha(opacity\x3d"+me.opacity+") progid:DXImageTransform.Microsoft.Blur(pixelradius\x3d"+me.offset+")";if(shim)shim.realign()}});Ext.define("com.coremedia.ui.overrides.SplitButtonAriaReadyOverride",{override:"Ext.button.Split",constructor:function(config){if(config.ariaLabel)config.ariaLabel=this.getSplitButtonAriaLabel(config.ariaLabel);this.callParent(arguments);this.splitButtonDescriptionEl=null},setAriaLabel:function(text){text=this.getSplitButtonAriaLabel(text);this.callParent(arguments)},getSplitButtonAriaLabel:function(text){return text+" Split"},getSplitButtonMoreInfoText:function(){return this.resourceManager.getString("com.coremedia.ui.UI",
"SplitButton_popup_info_text")},afterRender:function(){this.callParent(arguments);this.addOrRemoveSplitButtonDescription();this.preventTabbableArrowEl()},addOrRemoveSplitButtonDescription:function(){if(!this.rendered)return;if(!this.splitButtonDescriptionEl){this.splitButtonDescriptionEl=com.coremedia.ui.util.AriaUtils.createReferenceableAriaEl(this,"splitButtonDescriptionEl");com.coremedia.ui.util.AriaUtils.addDescribedBy(this.getEl(),this.splitButtonDescriptionEl.id)}if(this.menu)this.splitButtonDescriptionEl.dom.innerHTML=
this.getSplitButtonMoreInfoText();else this.splitButtonDescriptionEl.dom.innerHTML=""},preventTabbableArrowEl:function(){var arrowEl=this.arrowEl;arrowEl.dom.setAttribute("tabIndex",-1);arrowEl.dom.setAttribute=Ext.Function.createSequence(arrowEl.dom.setAttribute,function(attr,value){if(attr==="tabIndex"&&value!==-1)arrowEl.dom.setAttribute(attr,-1)})},setMenu:function(){this.callParent(arguments);this.addOrRemoveSplitButtonDescription()}});Ext.define("com.coremedia.ui.overrides.TabOverride",{override:"Ext.tab.Tab",initComponent:function(){var me=this;var ariaWarnFn=Ext.ariaWarn;Ext.ariaWarn=Ext.emptyFn;try{me.callParent(arguments)}finally{Ext.ariaWarn=ariaWarnFn}}});Ext.define("com.coremedia.ui.overrides.FormFieldSelectOnFocusOverride",{override:"Ext.form.field.Text",constructor:function(config){if(config&&config.editable!==false)config.selectOnFocus=true;this.callParent(arguments)}});Ext.define("com.coremedia.ui.overrides.TooltipOverride",{override:"Ext.tip.ToolTip",maxWidth:700,setTarget:function setTarget(target){var oldTouch=Ext.supports.Touch;Ext.supports.Touch=false;try{this.callParent(arguments)}finally{Ext.supports.Touch=oldTouch}}});Ext.define("com.coremedia.ui.overrides.ToolbarDefaultUIOverride",{override:"Ext.toolbar.Toolbar",defaultButtonUI:"default"});Ext.define("com.coremedia.ui.overrides.ViewDragZoneOverride",{override:"Ext.view.DragZone",onTriggerGesture:function(view,record,item,index,e){var navModel;if(e.pointerType==="touch"&&e.type!=="longpress"||e.position&&e.view.actionableMode&&e.position.isEqual(e.view.actionPosition))return;if(!this.isPreventDrag(e,record,item,index)){navModel=view.getNavigationModel();if(e.position)navModel.setPosition(e.position);else navModel.setPosition(index);this.handleMouseDown(e)}}});Ext.define("com.coremedia.ui.overrides.WindowDefaultFocusOverride",{override:"Ext.window.Window",defaultFocus:":focusable"});Ext.define("com.coremedia.ui.overrides.ZIndexManagerTopVisibleOverride",{override:"Ext.ZIndexManager",onCollectionSort:function(){var me=this,oldFront=me.front,zIndex=me.zseed,a=me.zIndexStack.getRange(),len=a.length,i,comp,topModal,topFocusable,topMost,doFocus=!oldFront||oldFront.isVisible();me.sortCount++;for(i=0;i<len;i++){comp=a[i];if(comp.destroying||comp.destroyed)continue;zIndex=comp.setZIndex(zIndex);if(!comp.hidden&&!AS3.is(comp,Ext.tip.ToolTip)){topMost=comp;if(comp.modal){topModal=comp;
topFocusable=null}if(doFocus&&(comp.isFocusable(true)&&(comp.modal||comp.focusOnToFront)))topFocusable=comp}}if(topFocusable&&topFocusable!==oldFront&&!topFocusable.preventFocusOnActivate)topFocusable.onFocusTopmost();if(topModal)if(topModal===me.topModal)me.syncModalMask(topModal);else me.showModalMask(topModal);else me.hideModalMask();if(topMost!==me.topMost){if(me.topMost)me.topMost.onZIndexChange(false);if(topMost)topMost.onZIndexChange(true)}me.front=topFocusable;me.topModal=topModal;me.topMost=
topMost;return zIndex}});
//# sourceMappingURL=com.coremedia.ui.toolkit__ui-components-overrides.js.map
