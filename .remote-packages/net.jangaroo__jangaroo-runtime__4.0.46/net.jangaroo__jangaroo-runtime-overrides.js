Ext.define("AS3_override",{override:"Ext.namespace",requires:["joo_runtime_init"]});Class={$isClass:true,$className:"Class",__isInstance__:function(object){return!!object&&(!!object.$isClass||typeof object.prototype==="object"||typeof object.prototype==="function")}};Vector$object=Array;
Ext.apply(Ext.namespace("AS3"),{assert:function(cond,file,line,column){if(!cond)throw new Error(file+"("+line+":"+column+"): assertion failed");},bind:function bind(object,boundMethodName){var method=object[boundMethodName];if(object.hasOwnProperty(boundMethodName))return method;var boundMethod=method.bind(object);Object.defineProperty(object,boundMethodName,{writable:true,value:boundMethod});return boundMethod},is:function(object,type){if(!Class.__isInstance__(type))throw new TypeError("Second parameter of 'is' or 'as' must be a type.");
if(object===undefined||object===null)return false;if(Ext.isFunction(type.__isInstance__))return type.__isInstance__(object);if(object.constructor===type||object instanceof type)return true;if(object.isObservable&&(type.$className==="Ext.mixin.Observable"||type.$className==="Ext.util.Observable"))return true;if(typeof object==="object"){var objectType;if(object.isInstance)objectType=object.self;else{var typeName=object.xclass||object.xtype&&Ext.ClassManager.getNameByAlias("widget."+object.xtype);if(typeName)objectType=
Ext.ClassManager.get(typeName)}if(AS3.isAssignableFrom(type,objectType))return true}return false},isAssignableFrom:function(type,clazz){if(!type||!clazz)return false;if(type===clazz)return true;if(clazz.prototype instanceof type)return true;if(type.$className){var mixins=clazz.prototype.mixins;if(Ext.isObject(mixins)){if(mixins[type.$className])return true;if(type.prototype.mixinId&&AS3.is(mixins[type.prototype.mixinId],type))return true;for(var key in mixins){var mixin=mixins[key];if(mixin&&AS3.isAssignableFrom(type,
mixin.self))return true}}}return false},as:function(object,type){return AS3.is(object,type)?object:null},cast:function(type,value){if(value===undefined||value===null)return value;var typePrototype=type.prototype;if(type.$className&&typePrototype&&typeof value==="object"&&!value.isInstance&&!value.xclass&&!value.xtype){if(typePrototype.hasOwnProperty("xtype")&&Ext.isString(typePrototype.xtype))value.xtype=typePrototype.xtype;else{var alias;var aliasType;if(typePrototype.hasOwnProperty("type")&&Ext.isString(typePrototype.type))aliasType=
typePrototype.type;else if(typePrototype.hasOwnProperty("alias")&&Ext.isArray(typePrototype.alias)&&Ext.isString(alias=typePrototype.alias[0]))aliasType=alias.substr(alias.indexOf(".")+1);if(aliasType)value.type=aliasType}value.xclass=type.$className;for(var key in value)if(value.hasOwnProperty(key)&&value[key]===undefined)delete value[key]}else if(!AS3.is(value,type))throw new TypeError("Value cannot be cast to "+Ext.getClassName(type)+": "+value);return value},getBindable:function(object,property){if(object.isInstance){this._checkConfig(object,
property,"get");return object.getConfig(property)}else return object[property]},setBindable:function(object,property,value){if(object.isInstance){this._checkConfig(object,property,"set");object.setConfig(property,value)}else object[property]=value;return value},_checkConfig:function(object,property,accessPrefix){if(!Ext.Config.map[property]){var accessorName=accessPrefix+Ext.String.capitalize(property);this.trace("[WARN]","AS3."+accessPrefix+"Bindable() called on "+Ext.getClassName(object)+"#"+property+
", which is not registered as a config. Still using method "+accessorName+"().");Ext.Config.get(property)}},addEventListener:function(eventDispatcher,flexEventClass,flexEventConstantName,flexEventListener,extEventOptions){var flexEventName=flexEventClass[flexEventConstantName];var extEventName=flexEventName.substr(2).toLowerCase();var extEventListener=function(){return flexEventListener(new flexEventClass(flexEventName,arguments))};if(eventDispatcher.isInstance){var args=Array.prototype.slice.call(arguments,
4);args.splice(0,0,extEventName,extEventListener);eventDispatcher.addListener.apply(eventDispatcher,args)}else{if(!eventDispatcher.listeners)eventDispatcher.listeners={};eventDispatcher.listeners[extEventName]=extEventOptions?Ext.apply({fn:extEventListener},extEventOptions):extEventListener}}});
Object.defineProperties(Date.prototype,["date","fullYear","day","hours","milliseconds","minutes","month","seconds","time","timezoneOffset"].reduce(function(properties,name){var methodSuffix=name.charAt(0).toUpperCase()+name.substr(1);["","UTC"].forEach(function createProperty(optUTC){var getter=Date.prototype["get"+optUTC+methodSuffix];if(getter){var setter=Date.prototype["set"+optUTC+methodSuffix];properties[name+optUTC]={get:getter,set:setter}}});return properties},{}));Ext.define("joo_runtime_init",{override:"Ext"});Ext.Class.registerPreprocessor("__accessors__",function(Class,data){if(data.__accessors__){if(data.__accessors__.statics){Object.defineProperties(Class,data.__accessors__.statics);delete data.__accessors__.statics}Object.defineProperties(Class.prototype,data.__accessors__);delete data.__accessors__}});
Ext.ClassManager.registerPostprocessor("__factory__",function(className,cls,data){if(data.__factory__){var value=data.__factory__();this.set(className,value);this.triggerCreated(className);return false}return true});
(function(){var wrapConstructor=function(Class){return function(){Class.__doInit__();return Class.prototype.constructor.apply(this,arguments)}};var wrapStaticMember=function(staticMemberName){return{get:function(){this.__doInit__();return this[staticMemberName]},set:function(value){this.__doInit__();this[staticMemberName]=value},enumerable:true,configurable:true}};Ext.Class.registerPreprocessor("statics",function(Class,data){var statics=data.statics;if(statics){var initStatics=statics.__initStatics__;
if(!initStatics)Class.addStatics(statics);else{delete statics.__initStatics__;var originalConstructor=data.hasOwnProperty("constructor")?data.constructor:null;data.constructor=wrapConstructor(Class);for(var staticMemberName in statics)Object.defineProperty(Class,staticMemberName,wrapStaticMember(staticMemberName));Class.__doInit__=function(){delete this.__doInit__;if(originalConstructor){this.prototype.constructor=originalConstructor;data.constructor=originalConstructor}else{delete this.prototype.constructor;
delete data.constructor}for(var staticMemberName in statics)delete this[staticMemberName];this.addStatics(statics);initStatics()}}delete data.statics}})})();
//# sourceMappingURL=net.jangaroo__jangaroo-runtime-overrides.js.map
